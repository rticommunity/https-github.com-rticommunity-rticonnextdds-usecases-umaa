/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_REFINEMENTS_ENUMERATIONSETS_ENUMERATIONSETS
#define _LDM_REFINEMENTS_ENUMERATIONSETS_ENUMERATIONSETS

#include "BasicTypes/Quaternion.idl"

//@copy-c #undef ERROR
//@copy-c #undef VARIABLE_PITCH
//@copy-c #undef DELETE
//@copy-c #undef PLATFORM

module UMAA
{
  module Common
  {
    module Enumeration
    {


        module AutomationEnumType
        {
          enum AutomationEnumType
          {
              AUTOMATIC, // Control over the corresponding element is completely automatic.
              MANUAL, // Control over the corresponding element is completely manual.
              SEMI_AUTOMATIC // Control over the corresponding element is semi-automatic.
          };
        };

        typedef boolean BooleanEnumType;

        module BuiltInTestStatusEnumType
        {
          enum BuiltInTestStatusEnumType
          {
              BIT_SUSPENDED, // The built-in test (BIT) has been suspended.
              BIT_FAILED, // The built-in test (BIT) has failed.
              BIT_PASSED, // The built-in test (BIT) has passed.
              RUNNING_BIT, // The built-in test (BIT) is current executing.
              OFF_ABORT // The built-in test (BIT) is off or has been aborted.
          };
        };

        module IRPolarityEnumType
        {
          enum IRPolarityEnumType
          {
              BLACK_HOT, // In the infrared (IR) image, the black regions indicate hot and white regions indicate cool.
              WHITE_HOT // In the infrared (IR) image, the white regions indicate hot and black regions indicate cool.
          };
        };

        module LineSegmentEnumType
        {
          enum LineSegmentEnumType
          {
              GREAT_CIRCLE, // The line segment should be traversed as one following a great circle.  A great circle is the shortest distance between two points on the surface of a sphere, measured along the surface of the sphere.
              RHUMB // The line segment should be traversed as one following a rhumb line.  A rhumb line represents an arc cross all meridians of longitude at the same angle (i.e. a path with constant bearing).
          };
        };

        module NetworkProtocolEnumType
        {
          enum NetworkProtocolEnumType
          {
              TCP_IPV4, // The network protocol is transmission control protocol (TCP) internet protocol (IP) version 4.  This is a reliable, connection based protocol that uses four octets to specify network addresses.
              TCP_IPV6, // The network protocol is transmission control protocol (TCP) internet protocol (IP) version 6.  This is a reliable, connection based protocol that uses 128-bits to specify network addresses.
              UDP_IPV4, // The network protocol is user datagram protocol (UDP) internet protocol (IP) version 4.  This is an unreliable, connectionless protocol that uses four octets to specify network addresses.
              UDP_IPV6 // The network protocol is user datagram protocol (UDP) internet protocol (IP) version 4.  This is an unreliable, connectionless protocol that uses four octets to specify network addresses.
          };
        };

        module OnOffStatusEnumType
        {
          enum OnOffStatusEnumType
          {
              OFF, // The device or subsystem is off.
              ON // The device or subsystem is on.
          };
        };

        module PlanActionEnumType
        {
          enum PlanActionEnumType
          {
              ABORT_MISSION_LOAD_PLAN, // The current mission should be aborted and the specified plan loaded in its place.
              ADD_PLAN, // The specified plan should be added to the mission plan repository.
              DELETE_PLAN, // The specified plan should be deleted from the mission plan repository.
              DOWNLOAD_PLAN, // The specified plan should be downloaded from the air vehicle to the mission plan repository.
              RETRIEVE_PLAN, // The specified plan should be retrieved from the mission plan repository.
              UPDATE_PLAN, // The specified plan should be updated in the mission plan repository.
              UPLOAD_PLAN // The specified plan should be uploaded to the air vehicle.
          };
        };

        module PowerStatusEnumType
        {
          enum PowerStatusEnumType
          {
              POWER_OFF, // Power for the device is requested/reported to be off.
              POWER_ON, // Power for the device is requested/reported to be on.
              EMERGENCY_POWER, // Power for the device is requested/reported to use emergency power.
              POWER_STANDBY // Power for the device is requested/reported to use standby power.
          };
        };

        module PrecipitationEnumType
        {
          enum PrecipitationEnumType
          {
              THUNDERSTORMS, // A rain or snow shower in which there is lightning. Thunder is always caused by lightning. In general, the upward and downward winds, updrafts and downdrafts, in thunderstorms are more violent than those in ordinary showers.
              FOG, // Fog is water droplets suspended in the air at or above the Earth's surface.
              HAZE, // Haze is an aggregation in the atmosphere of very fine, widely dispersed, solid or liquid particles, or both, giving the air an opalescent appearance that subdues colors.
              SNOW, // Precipitation in the form of ice crystals formed directly from the freezing [deposition] of the water vapor in the air.
              DRIZZLE, // Precipitation that consists of numerous minute droplets of water less than 0.5 mm in diameter that reach the Earth's surface.
              RAIN, // Precipitation that falls to earth in droplets of water more than 0.5 mm in diameter.
              SHOWERS // Rain that falls intermittently over a small area. The rain from an individual shower can be heavy or light, but doesn't cover a large area or last more than an hour or so.
          };
        };

        module ResourceAllocationStatusEnumType
        {
          enum ResourceAllocationStatusEnumType
          {
              FORCED_ALLOCATION, // The resource allocation is forced.
              FORCED_ALLOCATION_W_LAUNCH_RECOVERY, // The resource allocation with launch and recovery is forced.
              ALLOCATED, // The resource is allocated.
              ALLOCATED_W_LAUNCH_RECOVERY, // The resource is allocated with launch and recovery.
              AVAILABLE, // The resource is available.
              RELEASED, // The resource is released.
              TEMPORARILY_UNAVAILABLE, // The resource is temporarily unavailable.
              UNAVAILABLE, // The resource is unavailable.
              FAULT // There was a fault in the resource allocation.
          };
        };

        module SpecificLOIEnumType
        {
          enum SpecificLOIEnumType
          {
              LOI_1, // The data link level of interoperability (LOI)-1 is indirect receipt of UAV related data.
              LOI_2, // The data link level of interoperability (LOI)-2 is direct receipt of ISR or other data where "direct" covers reception of UAV data by the UCS when it has direct communication with the UAV.
              LOI_3, // The data link level of interoperability (LOI)-3 is control and monitoring of the UAV payload in additional to direct receipt of ISR or other data.
              LOI_4, // The data link level of interoperability (LOI)-4 is control and monitoring of the UAV, less launch and recovery.
              LOI_5 // The data link level of interoperability (LOI)-5 is control and monitoring of the UAV (LOI-4) plus launch and recovery functions.
          };
        };


    };
  };
};

#endif // _LDM_REFINEMENTS_ENUMERATIONSETS_ENUMERATIONSETS
