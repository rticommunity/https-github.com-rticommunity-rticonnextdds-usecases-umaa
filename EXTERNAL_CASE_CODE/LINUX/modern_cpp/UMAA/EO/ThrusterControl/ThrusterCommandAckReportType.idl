/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_THRUSTERCONTROL_THRUSTERCOMMANDACKREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_THRUSTERCONTROL_THRUSTERCOMMANDACKREPORTTYPE

#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/EO/ThrusterControl/ThrusterControlType.idl"
module UMAA
{
  module EO
  {
    module ThrusterControl
    {
      const string ThrusterCommandAckReport_TOPIC = "UMAA::EO::ThrusterControl::ThrusterCommandAckReport";
      @topic(name="UMAA::EO::ThrusterControl::ThrusterCommandAckReport")
      struct ThrusterCommandAckReportType
      {
      // Defines the attributes needed to control the thruster's desired speed/power.

      UMAA::EO::ThrusterControl::ThrusterControlType thruster;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The unique identifier for the session.

      @key UMAA::Common::Measurement::NumericGUID sessionID;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_THRUSTERCONTROL_THRUSTERCOMMANDACKREPORTTYPE
