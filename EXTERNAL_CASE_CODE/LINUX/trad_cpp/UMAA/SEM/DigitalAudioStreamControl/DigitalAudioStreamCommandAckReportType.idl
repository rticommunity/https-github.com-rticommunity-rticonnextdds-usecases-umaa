/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_DIGITALAUDIOSTREAMCONTROL_DIGITALAUDIOSTREAMCOMMANDACKREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_DIGITALAUDIOSTREAMCONTROL_DIGITALAUDIOSTREAMCOMMANDACKREPORTTYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/PrimitiveConstrained/ConstrainedTypes.idl"
module UMAA
{
  module SEM
  {
    module DigitalAudioStreamControl
    {
      const string DigitalAudioStreamCommandAckReport_TOPIC = "UMAA::SEM::DigitalAudioStreamControl::DigitalAudioStreamCommandAckReport";
      @topic(name="UMAA::SEM::DigitalAudioStreamControl::DigitalAudioStreamCommandAckReport")
      struct DigitalAudioStreamCommandAckReportType
      {
      // The on/off value indicating if a finite stream should be replayed once it finishes (true == repeat until new stream is specified)

      boolean repeat;

      // The URL source of the stream. This URL should not require a DNS to resolve; hence, and IP address should be substituted for a host name.

      UMAA::Common::PrimitiveConstrained::StringShortDescription url;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The unique identifier for the session.

      @key UMAA::Common::Measurement::NumericGUID sessionID;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_DIGITALAUDIOSTREAMCONTROL_DIGITALAUDIOSTREAMCOMMANDACKREPORTTYPE
