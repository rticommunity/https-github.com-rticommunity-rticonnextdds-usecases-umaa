/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_VELOCITYCONTROL_VELOCITYCOMMANDACKREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_VELOCITYCONTROL_VELOCITYCOMMANDACKREPORTTYPE

#include "UMAA/Common/MaritimeEnumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/Measurement/OrientationVelocity3D.idl"
#include "UMAA/Common/Measurement/Velocity3D_PlatformXYZ.idl"
module UMAA
{
  module MO
  {
    module VelocityControl
    {
      const string VelocityCommandAckReport_TOPIC = "UMAA::MO::VelocityControl::VelocityCommandAckReport";
      @topic(name="UMAA::MO::VelocityControl::VelocityCommandAckReport")
      struct VelocityCommandAckReportType
      {
      // The desired rotational rate of the unmanned platform.

      UMAA::Common::Measurement::OrientationVelocity3D attitudeRate;

      // The desired linear velocity (velocity X, Y, Z) of the unmanned platform.

      UMAA::Common::Measurement::Velocity3D_PlatformXYZ velocity;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The unique identifier for the session.

      @key UMAA::Common::Measurement::NumericGUID sessionID;

      // The desired velocity reference to be set for velocity command type.

      @key UMAA::Common::MaritimeEnumeration::VelocityCommandTypeEnumType::VelocityCommandTypeEnumType commandType;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_VELOCITYCONTROL_VELOCITYCOMMANDACKREPORTTYPE
