/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_GLOBALREGULARPOLYGONCONTROL_GLOBALREGULARPOLYGONCOMMANDTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_GLOBALREGULARPOLYGONCONTROL_GLOBALREGULARPOLYGONCOMMANDTYPE

#include "UMAA/Common/MaritimeEnumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/ElevationType.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/Measurement/Position2D.idl"
#include "UMAA/Common/Orientation/HeadingType.idl"
#include "UMAA/Common/VariableSpeedControl/VariableSpeedControlType.idl"
module UMAA
{
  module MO
  {
    module GlobalRegularPolygonControl
    {
      const string GlobalRegularPolygonCommand_TOPIC = "UMAA::MO::GlobalRegularPolygonControl::GlobalRegularPolygonCommand";
      @topic(name="UMAA::MO::GlobalRegularPolygonControl::GlobalRegularPolygonCommand")
      struct GlobalRegularPolygonCommandType
      {
      // The amount of error in position allowed from the pattern being executed.

      UMAA::Common::Measurement::Distance crossTrackTolerance;

      // The diameter of a circumscribed circle around the polygon.

      UMAA::Common::Measurement::Distance diameter;

      // The optional elevation used for the unmanned maritime platform.

      UMAA::Common::Measurement::ElevationType elevation;

      // The amount of elevation offset allowed relative to the commanded loitering elevation.

      UMAA::Common::Measurement::Distance elevationTolerance;

      // Specifies the end of the valid time period for the loiter; if not specified runs indefinitely until command is changed externally.

      @optional UMAA::Common::Measurement::DateTime endTime;

      // The number of sides on the polygon.

      UMAA::Common::Measurement::SidesCount numberSides;

      // The orientation describes the bearing from the reference position of the polygon to one point on the polygon.

      UMAA::Common::Orientation::HeadingType orientation;

      // The desired loiter position (latitude, longitude) of the unmanned platform in the global coordinate system. When not specified, means at current location.

      @optional UMAA::Common::Measurement::Position2D position;

      // The desired speed to loiter of the unmanned platform.

      UMAA::Common::VariableSpeedControl::VariableSpeedControlType speed;

      // The amount of speed error allowed relative to the commanded pattern execution speed.

      UMAA::Common::Measurement::GroundSpeed speedTolerance;

      // The elevation used while driving to the loiter track (USVs must specify 0 as it is a required field).

      UMAA::Common::Measurement::ElevationType transitElevation;

      // The amount of elevation error allowed relative to the commanded transit elevation.

      UMAA::Common::Measurement::Distance transitElevationTolerance;

      // The speed at which one drives to the loiter track.

      UMAA::Common::VariableSpeedControl::VariableSpeedControlType transitSpeed;

      // The amount of speed error allowed relative to the transit speed.

      UMAA::Common::Measurement::GroundSpeed transitSpeedTolerance;

      // The desired turn direction for the loiter of the unmanned platform.

      UMAA::Common::MaritimeEnumeration::WaterTurnDirectionEnumType::WaterTurnDirectionEnumType turnDirection;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The unique identifier for the destination.

      @key UMAA::Common::Measurement::NumericGUID destination;

      // The unique identifier for the session.

      @key UMAA::Common::Measurement::NumericGUID sessionID;

      // The time at which the data was derived.

      UMAA::Common::Measurement::DateTime timeStamp;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_GLOBALREGULARPOLYGONCONTROL_GLOBALREGULARPOLYGONCOMMANDTYPE
