/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_LOCALHOVERCONTROL_LOCALHOVERCOMMANDACKREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_LOCALHOVERCONTROL_LOCALHOVERCOMMANDACKREPORTTYPE

#include "UMAA/Common/MaritimeEnumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/ElevationType.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/Measurement/Position2D_PlatformXYZ.idl"
#include "UMAA/Common/Orientation/HeadingType.idl"
#include "UMAA/Common/VariableSpeedControl/VariableSpeedControlType.idl"
module UMAA
{
  module MO
  {
    module LocalHoverControl
    {
      const string LocalHoverCommandAckReport_TOPIC = "UMAA::MO::LocalHoverControl::LocalHoverCommandAckReport";
      @topic(name="UMAA::MO::LocalHoverControl::LocalHoverCommandAckReport")
      struct LocalHoverCommandAckReportType
      {
      // The desired priority to hover at the specified point.

      UMAA::Common::MaritimeEnumeration::HoverKindEnumType::HoverKindEnumType controlPriority;

      // The optional elevation used for the unmanned maritime platform.

      UMAA::Common::Measurement::ElevationType elevation;

      // The amount of elevation error allowed relative to the commanded hover elevation.

      UMAA::Common::Measurement::Distance elevationTolerance;

      // Specifies the end of the valid time period for the loiter; if not specified runs indefinitely until command is changed externally.

      @optional UMAA::Common::Measurement::DateTime endTime;

      // Defines the heading that the vehicle must maintain for loitering.

      @optional UMAA::Common::Orientation::HeadingType heading;

      // The amount of angle error allowed relative to the commanded heading.

      UMAA::Common::Measurement::RelativeAngle headingTolerance;

      // Defines the reference position in the system-defined coordinate system for the hover. When not specified, means at current location.

      @optional UMAA::Common::Measurement::Position2D_PlatformXYZ position;

      // The amount of distance error (radius) allowed relative to the commanded position.

      UMAA::Common::Measurement::Distance positionTolerance;

      // The elevation used while driving to the hover location (USVs must specify 0 as it is a required field).

      UMAA::Common::Measurement::ElevationType transitElevation;

      // The amount of elevation error allowed relative to the commanded transit elevation.

      UMAA::Common::Measurement::Distance transitElevationTolerance;

      // The speed at which one drives to the hover location.

      UMAA::Common::VariableSpeedControl::VariableSpeedControlType transitSpeed;

      // The amount of speed error allowed relative to the transit speed.

      UMAA::Common::Measurement::GroundSpeed transitSpeedTolerance;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The unique identifier for the session.

      @key UMAA::Common::Measurement::NumericGUID sessionID;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_LOCALHOVERCONTROL_LOCALHOVERCOMMANDACKREPORTTYPE
