/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_COMMSLOSTPOLICY_COMMSLOSTPOLICYCONFIGREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_COMMSLOSTPOLICY_COMMSLOSTPOLICYCONFIGREPORTTYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/MM/CommsLostPolicy/MoveToPosPolicyType.idl"
#include "UMAA/MM/CommsLostPolicy/RetrotraversePolicyType.idl"
module UMAA
{
  module MM
  {
    module CommsLostPolicy
    {
      const string CommsLostPolicyConfigReport_TOPIC = "UMAA::MM::CommsLostPolicy::CommsLostPolicyConfigReport";
      @topic(name="UMAA::MM::CommsLostPolicy::CommsLostPolicyConfigReport")
      struct CommsLostPolicyConfigReportType
      {
      // Number of seconds of no contact after which communication is considered lost and the policy is initiated.

      UMAA::Common::Measurement::Duration_Seconds commsLostTimeOut;

      // If true, the robot will stop when comms are regained. Otherwise it will do nothing.

      boolean commsRegainedStop;

      // Number of seconds of communication with previously controlling client to consider communications regained.

      UMAA::Common::Measurement::Duration_Seconds commsRegainedTimeOut;

      // If present, the robot will continue its mission when comms are lost.

      @optional boolean continueMission;

      // If present, the robot will move to a specific position when comms are lost.

      @optional UMAA::MM::CommsLostPolicy::MoveToPosPolicyType moveToPos;

      // If present, the robot will retrotraverse as specified when comms are lost.

      @optional UMAA::MM::CommsLostPolicy::RetrotraversePolicyType retrotraverse;

      // If present, the robot will stop moving when comms are lost.

      @optional boolean stopMotion;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The time at which the data was derived.

      UMAA::Common::Measurement::DateTime timeStamp;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_COMMSLOSTPOLICY_COMMSLOSTPOLICYCONFIGREPORTTYPE
