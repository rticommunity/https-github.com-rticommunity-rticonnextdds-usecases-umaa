/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_DIGITALAUDIOCONFIG_DIGITALAUDIOCONFIGREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_DIGITALAUDIOCONFIG_DIGITALAUDIOCONFIGREPORTTYPE

#include "UMAA/Common/MaritimeEnumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
module UMAA
{
  module SEM
  {
    module DigitalAudioConfig
    {
      const string DigitalAudioConfigReport_TOPIC = "UMAA::SEM::DigitalAudioConfig::DigitalAudioConfigReport";
      @topic(name="UMAA::SEM::DigitalAudioConfig::DigitalAudioConfigReport")
      struct DigitalAudioConfigReportType
      {
      // Audion stream bit depth.

      UMAA::Common::MaritimeEnumeration::BitDepthEnumType::BitDepthEnumType bitDepth;

      // Audio encoding format.

      UMAA::Common::MaritimeEnumeration::DigitalAudioFormatEnumType::DigitalAudioFormatEnumType digitalFormat;

      // Audio quality setting.

      UMAA::Common::MaritimeEnumeration::AudioEncodingQualityEnumType::AudioEncodingQualityEnumType encodingQuality;

      // The maximum bit rate (0 to 65535 kbps)

      UMAA::Common::Measurement::CommsRate_BitsPerSecond maxBitRate;

      // The minimum bit rate (0 to 65535 kbps)

      UMAA::Common::Measurement::CommsRate_BitsPerSecond minBitRate;

      // Number of audio channels to be sent to Annunciator in stream.

      UMAA::Common::Measurement::Count numberOfChannels;

      // The samples per second

      UMAA::Common::Measurement::Count sampleRate;

      // The sensitivity as a percentage (0 to 100)

      UMAA::Common::Measurement::Count sensitivity;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The time at which the data was derived.

      UMAA::Common::Measurement::DateTime timeStamp;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_DIGITALAUDIOCONFIG_DIGITALAUDIOCONFIGREPORTTYPE
