/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. 
 * Distribution is unlimited.
 * This software was developed by the Department of the Navy,
 * NAVSEA Unmanned and Small Combatants. It is provided under the terms of
 * use found in the LICENSE file at the source code root directory.
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

/**
  *
  * Version 6.0
  * Date: 2024-06-06
  *
  */


#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_PROPULSORSCONTROL_PROPULSORCOMMANDTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_PROPULSORSCONTROL_PROPULSORCOMMANDTYPE

#include "UMAA/Common/Angle/GammaAnglePropulsorRequirementType.idl"
#include "UMAA/Common/Angle/PropellerPitchAnglePropulsorRequirementType.idl"
#include "UMAA/Common/Angle/RhoAnglePropulsorRequirementType.idl"
#include "UMAA/Common/IdentifierType.idl"
#include "UMAA/Common/Speed/EngineRPMSpeedRequirement.idl"
module UMAA
{
  module EO
  {
    module PropulsorsControl
    {
    
      const string PropulsorCommandTypeTopic = "UMAA::EO::PropulsorsControl::PropulsorCommandType";
  
      /**
        * Describes the desired state of a propulsor on the vehicle.
        */
    
      struct PropulsorCommandType
      {
      // Sets the angle of a propulsor about the y-axis with one or two articulations.
      @optional UMAA::Common::Angle::GammaAnglePropulsorRequirementType gamma;

      // Sets the angle of the propeller pitch for propulsors that have a variable pitch propeller.
      @optional UMAA::Common::Angle::PropellerPitchAnglePropulsorRequirementType propellerPitch;

      // Sets the speed of the propulsor.
      UMAA::Common::Speed::EngineRPMSpeedRequirement propulsion;

      // Sets the angle of a propulsor about the z-axis with one or two articulations.
      @optional UMAA::Common::Angle::RhoAnglePropulsorRequirementType rho;

      // The origination time of the data being conveyed in the message, or as close to the data or command generation time as is reasonably possible.
      UMAA::Common::Measurement::DateTime timeStamp;

      // The unique identifier of the originating source of the command interface.
      @key UMAA::Common::IdentifierType source;

      // The unique identifier for the session.
      @key UMAA::Common::Measurement::NumericGUID sessionID;

      // The unique identifier of the destination of the command interface.
      @key UMAA::Common::IdentifierType destination;
      };

  
    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_PROPULSORSCONTROL_PROPULSORCOMMANDTYPE

