/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. 
 * Distribution is unlimited.
 * This software was developed by the Department of the Navy,
 * NAVSEA Unmanned and Small Combatants. It is provided under the terms of
 * use found in the LICENSE file at the source code root directory.
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

/**
  *
  * Version 6.0
  * Date: 2024-06-06
  *
  */


#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_ENGINESPECS_ENGINESPECSREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_ENGINESPECS_ENGINESPECSREPORTTYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/IdentifierType.idl"
#include "UMAA/Common/MaritimeEnumeration/MaritimeEnumerationSets.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/PrimitiveConstrained/ConstrainedTypes.idl"
module UMAA
{
  module EO
  {
    module EngineSpecs
    {
    
      const string EngineSpecsReportTypeTopic = "UMAA::EO::EngineSpecs::EngineSpecsReportType";
  
      /**
        * This structure is used to report the specifications of the engine of the vehicle.
        */
    
      struct EngineSpecsReportType
      {
      // The type of engine.
      UMAA::Common::MaritimeEnumeration::EngineKindEnumModule::EngineKindEnumType engineKind;

      // The glow plug preset heating time.
      @optional UMAA::Common::Measurement::DurationSeconds glowPlugTime;

      // The maximum coolant level limit.
      UMAA::Common::Measurement::VolumeCubicMeter maxCoolantLevel;

      // The maximum coolant pressure limit.
      UMAA::Common::Measurement::PressureKiloPascals maxCoolantPressure;

      // The maximum coolant temperature limit.
      UMAA::Common::Measurement::Temperature maxCoolantTemp;

      // The maximum engine temperature limit.
      UMAA::Common::Measurement::Temperature maxEngineTemp;

      // The maximum glow plug temperature limit.
      @optional UMAA::Common::Measurement::Temperature maxGlowPlugTemp;

      // The maximum engine manifold air temperature limit.
      UMAA::Common::Measurement::Temperature maxManifoldAirTemp;

      // The maximum engine manifold pressure limit.
      UMAA::Common::Measurement::PressureKiloPascals maxManifoldPressure;

      // The maximum engine oil pressure limit.
      UMAA::Common::PrimitiveConstrained::MaxEngineOilPressure maxOilPressure;

      // The maximum engine oil temperature limit.
      UMAA::Common::Measurement::Temperature maxOilTemp;

      // The minimum coolant level limit.
      UMAA::Common::Measurement::VolumeCubicMeter minCoolantLevel;

      // The minimum engine oil level limit.
      UMAA::Common::Measurement::VolumeCubicMeter minOilLevel;

      // The name of the engine.
      UMAA::Common::PrimitiveConstrained::StringShortDescription name;

      // The oil capacity of the engine.
      UMAA::Common::Measurement::VolumeCubicMeter oilCapacity;

      // Describes the lower limit of reverse RPM.
      UMAA::Common::Measurement::EngineSpeed reverseRPMLowerLimit;

      // Describes the maximum limit of reverse RPM.
      UMAA::Common::Measurement::EngineSpeed reverseRPMMaxLimit;

      // Describes the upper limit of reverse RPM.
      UMAA::Common::Measurement::EngineSpeed reverseRPMUpperLimit;

      // The reversibility of the engine rotation.
      boolean reversible;

      // The lower RPM limit to operate the engine.
      UMAA::Common::Measurement::EngineSpeed RPMLowerLimit;

      // The physical maximum RPM limit to operate the engine.
      UMAA::Common::Measurement::EngineSpeed RPMMaxLimit;

      // The upper RPM limit to operate the engine.
      UMAA::Common::Measurement::EngineSpeed RPMUpperLimit;

      // The origination time of the data being conveyed in the message, or as close to the data or command generation time as is reasonably possible.
      UMAA::Common::Measurement::DateTime timeStamp;

      // The unique identifier of the originating source of the command interface.
      @key UMAA::Common::IdentifierType source;
      };

  
    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESUBSYSTEMCONTROLANDSTATUS_ENGINESPECS_ENGINESPECSREPORTTYPE

