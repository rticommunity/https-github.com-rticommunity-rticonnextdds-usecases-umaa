/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. 
 * Distribution is unlimited.
 * This software was developed by the Department of the Navy,
 * NAVSEA Unmanned and Small Combatants. It is provided under the terms of
 * use found in the LICENSE file at the source code root directory.
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

/**
  *
  * Version 6.0
  * Date: 2024-06-06
  *
  */


#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_CONDITIONAL_EXPCONDITIONALTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_CONDITIONAL_EXPCONDITIONALTYPE

#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/PrimitiveConstrained/ConstrainedTypes.idl"
#include "UMAA/MM/BaseType/KeyValueType.idl"
module UMAA
{
  module MM
  {
    module Conditional
    {

    const string ExpConditionalTypeTopic = "UMAA::MM::Conditional::ExpConditionalType";

      /**
        * This structure is used to define the an experimental conditional by specifying key/value pairs.
        *
        * This structure is a specialization of UMAA::MM::Conditional::ConditionalType.
        */
    
      struct ExpConditionalType
      {
      // Defines a short name for the experimental conditional.
      UMAA::Common::PrimitiveConstrained::StringShortDescription expConditionalName;

      // Defines a set of key/value pairs for the experimental conditional.
      sequence<UMAA::MM::BaseType::KeyValueType,170> keyValues;

      // This field identifies the timestamp that signals the end of an atomic update to the instance of the specialization. NOTE: Ties this element back to the specializationID in ConditionalType generalization.
      UMAA::Common::Measurement::DateTime specializationReferenceTimestamp;

      // NOTE: Ties this element back to the ConditionalType generalization.
      @key UMAA::Common::Measurement::NumericGUID specializationReferenceID;
      };

  
    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_CONDITIONAL_EXPCONDITIONALTYPE

