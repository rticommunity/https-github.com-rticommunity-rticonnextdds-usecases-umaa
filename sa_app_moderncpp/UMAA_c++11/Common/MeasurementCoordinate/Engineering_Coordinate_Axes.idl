/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_BASISELEMENTS_PRIMITIVETYPES_COORDINATE_AXES_ENGINEERING_COORDINATE_AXES_ENGINEERING_COORDINATE_AXES
#define _LDM_BASISELEMENTS_PRIMITIVETYPES_COORDINATE_AXES_ENGINEERING_COORDINATE_AXES_ENGINEERING_COORDINATE_AXES

#include "BasicTypes/Quaternion.idl"

module UMAA
{
  module Common
  {
    module MeasurementCoordinate
    {

        typedef double DateTime;
        @range(min = -50000, max = 50000) @unit(Meter) typedef double Down; // axisAbbrev=Z axisDirection=down axisUnit=Meter maximumValue=50000 minimumValue=-50000 rangeMeaning=exact resolution=0.001
        typedef double DownSpeed;
        typedef double EastSpeed;
        @range(min = -20000000, max = 20000000) @unit(Meter) typedef double Forward; // axisAbbrev=X axisDirection=fore axisUnit=Meter maximumValue=20000000 minimumValue=-20000000 rangeMeaning=exact resolution=0.001
        typedef double ForwardSpeed;
        typedef double NorthSpeed;
        typedef double RadarHeight;
        @range(min = -20000000, max = 20000000) @unit(Meter) typedef double Right; // axisAbbrev=Y axisDirection=starboard axisUnit=Meter maximumValue=20000000 minimumValue=-20000000 rangeMeaning=exact resolution=0.001
        typedef double RightSpeed;


    };
  };
};

#endif // _LDM_BASISELEMENTS_PRIMITIVETYPES_COORDINATE_AXES_ENGINEERING_COORDINATE_AXES_ENGINEERING_COORDINATE_AXES
