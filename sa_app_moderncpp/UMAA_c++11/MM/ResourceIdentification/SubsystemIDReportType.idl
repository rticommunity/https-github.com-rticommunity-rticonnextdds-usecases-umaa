/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_RESOURCE_MANAGEMENT_RESOURCEIDENTIFICATION_SUBSYSTEMIDREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_RESOURCE_MANAGEMENT_RESOURCEIDENTIFICATION_SUBSYSTEMIDREPORTTYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/PrimitiveConstrained/ConstrainedTypes.idl"
module UMAA
{
  module MM
  {
    module ResourceIdentification
    {
      const string SubsystemIDReport_TOPIC = "UMAA::MM::ResourceIdentification::SubsystemIDReport";
      @topic(name="UMAA::MM::ResourceIdentification::SubsystemIDReport")
      struct SubsystemIDReportType
      {
      // An subsystem or a subset of a system can be transferred control between control systems.

      boolean isControlTransferCapable;

      // A name to describe a payload or a subsystem.

      UMAA::Common::PrimitiveConstrained::StringShortDescription name;

      // A name to describe the type of payload or subsystem (e.g. cameras, sonar, batteries, GPS, etc.).

      UMAA::Common::PrimitiveConstrained::StringShortDescription type;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The time at which the data was derived.

      UMAA::Common::Measurement::DateTime timeStamp;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_RESOURCE_MANAGEMENT_RESOURCEIDENTIFICATION_SUBSYSTEMIDREPORTTYPE
