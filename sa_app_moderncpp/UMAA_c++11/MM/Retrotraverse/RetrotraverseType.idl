/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_RETROTRAVERSE_RETROTRAVERSETYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_RETROTRAVERSE_RETROTRAVERSETYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/MaritimeEnumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
module UMAA
{
  module MM
  {
    module Retrotraverse
    {
      struct RetrotraverseType
      {
      // Distance along the path to retrotraverse. In the case of retrotraverse to a point, this distance represents the maximum allowed overall travel distance; after this distance, the vehicle should stop even if the target point has not been achieved.

      UMAA::Common::Measurement::Distance distance;

      // The maximum traversal speed. A value of zero means the unmanned platform should not exceed the speed of original travel.

      UMAA::Common::Measurement::Speed maxSpeed;

      // A speed mode.

      UMAA::Common::MaritimeEnumeration::VehicleSpeedModeEnumType::VehicleSpeedModeEnumType mode;

      // A speed reference.

      UMAA::Common::MaritimeEnumeration::VehicleSpeedReferenceEnumType::VehicleSpeedReferenceEnumType speedReference;

      // Exclusion radius around the destination point. The unmanned platform may not approach closer than this distance.

      UMAA::Common::Measurement::Distance standoffDistance;

      // This field defines the direction of motion used in retrotraverse. If the field is set, the unmanned platform will retrotraverse with positive velocity (conventional direction of travel). If the field is not set, the vehicle travel with negative velocity.

      boolean travelDirection;

      // When this field is set, the unmanned platform will travel along a straight line to a point on the originally traveled path that is X distance away from the current position, where X is specified in travelDirection. Otherwise, the unmanned platform will travel a path i.

      boolean travelMethod;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_RETROTRAVERSE_RETROTRAVERSETYPE
