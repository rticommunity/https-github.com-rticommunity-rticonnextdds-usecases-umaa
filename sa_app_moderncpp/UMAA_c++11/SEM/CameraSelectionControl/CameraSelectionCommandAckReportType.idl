/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_SENSOR_MANAGEMENT_CAMERASELECTIONCONTROL_CAMERASELECTIONCOMMANDACKREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_SENSOR_MANAGEMENT_CAMERASELECTIONCONTROL_CAMERASELECTIONCOMMANDACKREPORTTYPE

#include "UMAA/Common/Measurement/Measurements.idl"
module UMAA
{
  module SEM
  {
    module CameraSelectionControl
    {
      const string CameraSelectionCommandAckReport_TOPIC = "UMAA::SEM::CameraSelectionControl::CameraSelectionCommandAckReport";
      @topic(name="UMAA::SEM::CameraSelectionControl::CameraSelectionCommandAckReport")
      struct CameraSelectionCommandAckReportType
      {
      // An unique identification of the selecting camera

      UMAA::Common::Measurement::NumericGUID cameraID;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The unique identifier for the session.

      @key UMAA::Common::Measurement::NumericGUID sessionID;

      // An unique identification of the multiplexer in the unmanned platform

      @key UMAA::Common::Measurement::NumericGUID muxID;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_SENSOR_MANAGEMENT_CAMERASELECTIONCONTROL_CAMERASELECTIONCOMMANDACKREPORTTYPE
