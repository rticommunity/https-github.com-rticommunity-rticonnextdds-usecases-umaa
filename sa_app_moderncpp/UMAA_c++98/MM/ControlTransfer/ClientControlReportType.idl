/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_RESOURCE_MANAGEMENT_CONTROLTRANSFER_CLIENTCONTROLREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_RESOURCE_MANAGEMENT_CONTROLTRANSFER_CLIENTCONTROLREPORTTYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
module UMAA
{
  module MM
  {
    module ControlTransfer
    {
      const string ClientControlReport_TOPIC = "UMAA::MM::ControlTransfer::ClientControlReport";
      @topic(name="UMAA::MM::ControlTransfer::ClientControlReport")
      struct ClientControlReportType
      {
      // Value between 0 and 255 with 0 indicating no control and 255 being root access. The control arbiter may use this value to automatically force a control release or this value may be displayed to the controlling client user as an indication of control urgency.

      UMAA::Common::Measurement::Count authorityLevel;

      // A unique identification of an operator or a subsystem that controls the unmanned platform or a payload. However, if status is AVAILABLE, clientID should not be set.

      UMAA::Common::Measurement::NumericGUID clientID;

      // A control status of the unmanned platform, a system or a payload

      UMAA::Common::Enumeration::ResourceAllocationStatusEnumType::ResourceAllocationStatusEnumType status;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The time at which the data was derived.

      UMAA::Common::Measurement::DateTime timeStamp;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_RESOURCE_MANAGEMENT_CONTROLTRANSFER_CLIENTCONTROLREPORTTYPE
