/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_OBJECTIVETYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_OBJECTIVETYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/DateTime_Tolerance.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/PrimitiveConstrained/ConstrainedTypes.idl"
#include "UMAA/MM/BaseType/ChargingObjectiveType.idl"
#include "UMAA/MM/BaseType/CommsLinkObjectiveType.idl"
#include "UMAA/MM/BaseType/ContingencyObjectiveType.idl"
#include "UMAA/MM/BaseType/DeploymentObjectiveType.idl"
#include "UMAA/MM/BaseType/LoiterObjectiveType.idl"
#include "UMAA/MM/BaseType/PassiveLoiterObjectiveType.idl"
#include "UMAA/MM/BaseType/ProductDisseminateFileObjectiveType.idl"
#include "UMAA/MM/BaseType/ProductExploitationObjectiveType.idl"
#include "UMAA/MM/BaseType/RecoveryObjectiveType.idl"
#include "UMAA/MM/BaseType/RouteObjectiveType.idl"
#include "UMAA/MM/BaseType/StationkeepObjectiveType.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
module UMAA
{
  module MM
  {
    module BaseType
    {
      module ObjectiveType_Specializations
      {
          enum ObjectiveType_Selectors
          {
              PRODUCTDISSEMINATEFILEOBJECTIVETYPE_SELECT,
              RECOVERYOBJECTIVETYPE_SELECT,
              PRODUCTEXPLOITATIONOBJECTIVETYPE_SELECT,
              COMMSLINKOBJECTIVETYPE_SELECT,
              DEPLOYMENTOBJECTIVETYPE_SELECT,
              PASSIVELOITEROBJECTIVETYPE_SELECT,
              STATIONKEEPOBJECTIVETYPE_SELECT,
              ROUTEOBJECTIVETYPE_SELECT,
              CHARGINGOBJECTIVETYPE_SELECT,
              LOITEROBJECTIVETYPE_SELECT,
              CONTINGENCYOBJECTIVETYPE_SELECT
          };

          union ObjectiveType_Union switch (ObjectiveType_Selectors)
          {
                case PRODUCTDISSEMINATEFILEOBJECTIVETYPE_SELECT: UMAA::MM::BaseType::ProductDisseminateFileObjectiveType ProductDisseminateFileObjectiveType_data;
                case RECOVERYOBJECTIVETYPE_SELECT: UMAA::MM::BaseType::RecoveryObjectiveType RecoveryObjectiveType_data;
                case PRODUCTEXPLOITATIONOBJECTIVETYPE_SELECT: UMAA::MM::BaseType::ProductExploitationObjectiveType ProductExploitationObjectiveType_data;
                case COMMSLINKOBJECTIVETYPE_SELECT: UMAA::MM::BaseType::CommsLinkObjectiveType CommsLinkObjectiveType_data;
                case DEPLOYMENTOBJECTIVETYPE_SELECT: UMAA::MM::BaseType::DeploymentObjectiveType DeploymentObjectiveType_data;
                case PASSIVELOITEROBJECTIVETYPE_SELECT: UMAA::MM::BaseType::PassiveLoiterObjectiveType PassiveLoiterObjectiveType_data;
                case STATIONKEEPOBJECTIVETYPE_SELECT: UMAA::MM::BaseType::StationkeepObjectiveType StationkeepObjectiveType_data;
                case ROUTEOBJECTIVETYPE_SELECT: UMAA::MM::BaseType::RouteObjectiveType RouteObjectiveType_data;
                case CHARGINGOBJECTIVETYPE_SELECT: UMAA::MM::BaseType::ChargingObjectiveType ChargingObjectiveType_data;
                case LOITEROBJECTIVETYPE_SELECT: UMAA::MM::BaseType::LoiterObjectiveType LoiterObjectiveType_data;
                case CONTINGENCYOBJECTIVETYPE_SELECT: UMAA::MM::BaseType::ContingencyObjectiveType ContingencyObjectiveType_data;
          };

      };
      struct ObjectiveType
      {
      // An indication whether approval is required for the specified objective within a mission

      boolean approvalRequired;

      // If the objective is decomposed into lower level objectives, specifies one or more unique identifiers of the children objectives that decompose the objective.

      sequence<UMAA::Common::Measurement::NumericGUID> childObjectiveIDs;

      // List of objectives that must be adjudicated (e.g., completed, cancelled, etc.) before the referenced objective can begin execution.

      sequence<UMAA::Common::Measurement::NumericGUID> dependentObjectiveIDs;

      // Absolute time for which task must end.  An optional tolerance for the end time may be defined.

      UMAA::Common::Measurement::DateTime endTime;

      // The earliest absolute time the task can end and the latest absolute time the mission can end.

      @optional UMAA::Common::Measurement::DateTime_Tolerance endTimeTolerance;

      // A short name for the objective.

      UMAA::Common::PrimitiveConstrained::StringShortDescription name;

      // If defined, specifies the unique identifier of the preferred resource(s) to execute objective.

      sequence<UMAA::Common::Measurement::NumericGUID> preferredResourceIDs;

      // Specifies the execution priority for the objective

      UMAA::Common::Measurement::Order priority;

      // Absolute time for which task must begin. An optional tolerance for the start time may be defined.

      UMAA::Common::Measurement::DateTime startTime;

      // The earliest absolute time the task can start and the latest absolute time the mission can start.

      @optional UMAA::Common::Measurement::DateTime_Tolerance startTimeTolerance;

      // Union to capture specializations of ObjectiveType

      ObjectiveType_Specializations::ObjectiveType_Union ObjectiveType_subtypes;

      // Unique identifier for the objective within a mission.

      @key UMAA::Common::Measurement::NumericGUID objectiveID;

      // If the objective was decomposed from a high level objective, specifies the unique identifier of the parent objective from which it was decomposed.

      @key UMAA::Common::Measurement::NumericGUID parentObjectiveID;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_OBJECTIVETYPE
