/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_LOCALFIGURE8CONTROL_LOCALFIGURE8COMMANDTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_LOCALFIGURE8CONTROL_LOCALFIGURE8COMMANDTYPE

#include "UMAA/Common/MaritimeEnumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/ElevationType.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/Measurement/Position2D_PlatformXYZ.idl"
#include "UMAA/Common/Orientation/HeadingType.idl"
#include "UMAA/Common/VariableSpeedControl/VariableSpeedControlType.idl"
module UMAA
{
  module MO
  {
    module LocalFigure8Control
    {
      const string LocalFigure8Command_TOPIC = "UMAA::MO::LocalFigure8Control::LocalFigure8Command";
      @topic(name="UMAA::MO::LocalFigure8Control::LocalFigure8Command")
      struct LocalFigure8CommandType
      {
      // The amount of error in position allowed from the pattern being executed.

      UMAA::Common::Measurement::Distance crossTrackTolerance;

      // The desired elevation used for the unmanned maritime platform.

      UMAA::Common::Measurement::ElevationType elevation;

      // The amount of elevation offset allowed relative to the commanded loitering elevation.

      UMAA::Common::Measurement::Distance elevationTolerance;

      // Specifies the end of the valid time period for the loiter; if not specified runs indefinitely until command is changed externally.

      @optional UMAA::Common::Measurement::DateTime endTime;

      // Describes the length between the semicircles at either end of the figure 8 the unmanned platform should stay in.

      UMAA::Common::Measurement::Distance length;

      // The orientation of the figure 8, measured perpendicular to the length axis. If not specified, aligns with the local X axis.

      UMAA::Common::Orientation::HeadingType orientation;

      // The desired loiter position (X, Y) of the unmanned platform in the local coordinate system. When not specified, means at current location.

      @optional UMAA::Common::Measurement::Position2D_PlatformXYZ position;

      // Describes the radius of the semicircles at either end of the figure 8 the unmanned platform should stay in.

      UMAA::Common::Measurement::Distance radius;

      // The desired speed to loiter of the unmanned platform.

      UMAA::Common::VariableSpeedControl::VariableSpeedControlType speed;

      // The amount of speed error allowed relative to the commanded pattern execution speed.

      UMAA::Common::Measurement::GroundSpeed speedTolerance;

      // The elevation used while driving to the loiter track (USVs must specify 0 as it is a required field).

      UMAA::Common::Measurement::ElevationType transitElevation;

      // The amount of elevation error allowed relative to the commanded transit elevation.

      UMAA::Common::Measurement::Distance transitElevationTolerance;

      // The speed at which one drives to the loiter track.

      UMAA::Common::VariableSpeedControl::VariableSpeedControlType transitSpeed;

      // The amount of speed error allowed relative to the transit speed.

      UMAA::Common::Measurement::GroundSpeed transitSpeedTolerance;

      // The desired direction to loiter of the unmanned platform.

      UMAA::Common::MaritimeEnumeration::WaterTurnDirectionEnumType::WaterTurnDirectionEnumType turnDirection;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The unique identifier for the destination.

      @key UMAA::Common::Measurement::NumericGUID destination;

      // The unique identifier for the session.

      @key UMAA::Common::Measurement::NumericGUID sessionID;

      // The time at which the data was derived.

      UMAA::Common::Measurement::DateTime timeStamp;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_LOCALFIGURE8CONTROL_LOCALFIGURE8COMMANDTYPE
