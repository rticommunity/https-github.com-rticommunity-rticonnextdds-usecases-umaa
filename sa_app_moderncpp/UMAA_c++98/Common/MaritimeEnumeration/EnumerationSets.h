

/*
WARNING: THIS FILE IS AUTO-GENERATED. DO NOT MODIFY.

This file was generated from EnumerationSets.idl
using RTI Code Generator (rtiddsgen) version 4.2.0.
The rtiddsgen tool is part of the RTI Connext DDS distribution.
For more information, type 'rtiddsgen -help' at a command shell
or consult the Code Generator User's Manual.
*/

#ifndef EnumerationSets_1089266797_h
#define EnumerationSets_1089266797_h

#ifndef NDDS_STANDALONE_TYPE
#ifndef ndds_cpp_h
#include "ndds/ndds_cpp.h"
#endif
#include "rti/xcdr/Interpreter.hpp"
#else
#include "ndds_standalone_type.h"
#endif

#include "BasicTypes/Quaternion.h"
#undef ERROR 
#undef VARIABLE_PITCH 
#undef DELETE 
#undef PLATFORM 

typedef enum UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType
{
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_INVALID_FORMAT , 
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_UNKNOWN_ERROR_FAULT , 
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_UNKNOWN_SENSOR_ID 
} UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_AnalogSensorErrorCodeEnumType_AnalogSensorErrorCodeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType
{
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_LOWER , 
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_RAISE , 
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_STOP 
} UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumTypeSeq, UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType_copy(
    UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_AnchorActionEnumType_AnchorActionEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType
{
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_COMMERCIAL_STOCKLESS , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_DANFORTH , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_FOUR_FLUKE , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_GENERAL , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_LIGHTWEIGHT , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_MARK_2_LWT , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_MARK_2_STOCKLESS , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_MUSHROOM , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_NAVY_TYPE_STOCK , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_NONMAGNETIC , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_STANDARD_NAVY_STOCKLESS , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_TWO_FLUKE_BALANCED_FLUKE , 
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_WEDGE_BLOCK_LWT 
} UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumTypeSeq, UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType_copy(
    UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_AnchorKindEnumType_AnchorKindEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType
{
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_BOWER , 
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_KEEL , 
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_STERN 
} UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumTypeSeq, UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType_copy(
    UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_AnchorLocationEnumType_AnchorLocationEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType
{
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_DEPLOYED , 
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_LOWERING , 
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_STOPPED , 
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_RAISING , 
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_STOWED 
} UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_AnchorStateEnumType_AnchorStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType
{
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_AVERAGE , 
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_BEST , 
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_BETTER , 
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_GOOD , 
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_LESS , 
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_POOR , 
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_WORST 
} UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumTypeSeq, UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType_copy(
    UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_AudioEncodingQualityEnumType_AudioEncodingQualityEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType
{
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_OWNSHIP , 
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_NORTH 
} UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumTypeSeq, UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType_copy(
    UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_BearingAngleEnumType_BearingAngleEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType
{
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_AUTO , 
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_OFF , 
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_ON 
} UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumTypeSeq, UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType_copy(
    UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_BilgeControlEnumType_BilgeControlEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType
{
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_FAULT , 
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_OFF , 
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_ON 
} UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_BilgeStateEnumType_BilgeStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType
{
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_TEN_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_TWELVE_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_FOURTEEN_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_SIXTEEN_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_TWENTY_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_TWENTY_FOUR_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_THIRTY_TWO_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_FOURTY_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_FOURTY_EIGHT_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_FIFTY_SIX_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_SIXTY_FOUR_BITS , 
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_EIGHT_BITS 
} UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumTypeSeq, UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType_copy(
    UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_BitDepthEnumType_BitDepthEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType
{
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_BLASTING , 
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_RESTING 
} UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumTypeSeq, UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType_copy(
    UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_BlastConditionEnumType_BlastConditionEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType
{
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_LONG_BLAST , 
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_SHORT_BLAST 
} UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumTypeSeq, UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType_copy(
    UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_BlastKindEnumType_BlastKindEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType
{
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_DEVIATE_FROM_PATH , 
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_DO_NOTHING , 
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_STOP_ON_PATH 
} UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_CollisionAvoidStateEnumType_CollisionAvoidStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType
{
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_ACTIVE_AVOID_OBSTACLE , 
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_ACTIVE_STOP_ON_OBSTACLE , 
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_DISABLED , 
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_ENABLED 
} UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumTypeSeq, UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType_copy(
    UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_CollisionAvoidStatusEnumType_CollisionAvoidStatusEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType
{
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_POWER_DRIVEN_UNDERWAY , 
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_SAILING , 
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_FISHING , 
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_NOT_UNDER_COMMAND , 
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_RESTRICTED_IN_ABILITY_TO_MANUEVER , 
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_ANCHORED , 
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_CONSTRAINED_BY_DRAUGHT , 
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_PUSHING , 
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_TOWING , 
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_NON_VESSEL 
} UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumTypeSeq, UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType_copy(
    UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_COLREGSClassificationEnumType_COLREGSClassificationEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType
{
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_CANCELED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_VALIDATION_FAILED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_OBJECTIVE_FAILED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_SERVICE_FAILED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_RESOURCE_FAILED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_RESOURCE_REJECTED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_INTERRUPTED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_TIMEOUT , 
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_SUCCEEDED 
} UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumTypeSeq, UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType_copy(
    UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_CommandStatusReasonEnumType_CommandStatusReasonEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType
{
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_BEING_OVERTAKEN_COMPLIANT , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_BEING_OVERTAKEN_NONCOMPLIANT , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_CROSSING_LEFT_COMPLIANT , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_CROSSING_LEFT_NONCOMPLIANT , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_CROSSING_RIGHT_COMPLIANT , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_CROSSING_RIGHT_NONCOMPLIANT , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_HEAD_ON_COMPLIANT , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_HEAD_ON_NONCOMPLIANT , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_OVERTAKING_COMPLIANT , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_OVERTAKING_NONCOMPLIANT , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_GUIDE , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_IN_EXTREMIS , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_COLLISION_AVOIDANCE , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_PREEMPTIVE , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_OBSTACLE_AVOIDANCE , 
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_NONE 
} UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumTypeSeq, UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType_copy(
    UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_ContactManeuverInfluenceEnumType_ContactManeuverInfluenceEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType
{
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_CONTINUE , 
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_FINISH , 
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_LOITER , 
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_NONE , 
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_VEHICLE_SPECIFIC , 
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType__HOME 
} UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumTypeSeq, UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType_copy(
    UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_ContingencyBehaviorEnumType_ContingencyBehaviorEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType
{
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_SENSOR_COORDINATE_SYSTEM , 
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_VEHICLE_COORDINATE_SYSTEM 
} UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumTypeSeq, UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType_copy(
    UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_CoordinateSystemEnumType_CoordinateSystemEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType
{
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_EMERGENCY , 
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_FAILURE , 
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_INITIAL , 
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_READY , 
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_RESET , 
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_RESUME , 
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_SHUTDOWN , 
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_STANDBY 
} UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_CoreStateEnumType_CoreStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType
{
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_AAC_MPEG2 , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_AAC_MPEG4 , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_AIFF , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_ALAC , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_DOLBY_DIGITAL , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_DTS , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_FLAC , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_LPCM_PCM , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_MP2 , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_MP3 , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_REAL_AUDIO , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_SPEEX , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_TRUE_AUDIO , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_ULAW , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_VORBIS , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_WAV , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_WMA , 
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_WMA9_LOSS_LESS 
} UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumTypeSeq, UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType_copy(
    UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_DigitalAudioFormatEnumType_DigitalAudioFormatEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType
{
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_INVALID_FORMAT , 
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_INVALID_FRAME_SIZE , 
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_INVALID_MAX_BIT_RATE , 
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_INVALID_MAX_FRAME_RATE , 
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_INVALID_MIN_BIT_RATE , 
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_INVALID_MIN_FRAME_RATE , 
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_MULTIPLE_INVALID_PARAMETERS , 
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_UNKNOWN_ERROR_FAULT , 
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_UNKNOWN_SENSOR_ID 
} UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_DigitalSensorErrorCodeEnumType_DigitalSensorErrorCodeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType
{
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_AIR , 
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_GROUND , 
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_SURFACE , 
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_UNDERSEA 
} UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumTypeSeq, UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType_copy(
    UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_DomainEnumType_DomainEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType
{
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_DIESEL , 
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_GAS 
} UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumTypeSeq, UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType_copy(
    UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_EngineKindEnumType_EngineKindEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType
{
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_ACTUATOR , 
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_FILESYS , 
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_NONE , 
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_POWER , 
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_PROCESSOR , 
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_RAM , 
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_ROM , 
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_SENSOR , 
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_SOFTWARE 
} UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_ErrorCodeEnumType_ErrorCodeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType
{
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_INFO , 
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_WARN , 
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_ERROR , 
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_FAIL , 
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_NONE 
} UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumTypeSeq, UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType_copy(
    UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_ErrorConditionEnumType_ErrorConditionEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType
{
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_AUTO_DEFAULT , 
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_MANUAL , 
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_APETURE_PRIORITY , 
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_SHUTTER_PRIORITY 
} UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_ExposureModeEnumType_ExposureModeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType
{
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_CGA_320x200 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_CIF_1408x1152 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_CIF_352x288 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_CIF_704x576 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_EGA_640x350 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_HD1080_1920x1080 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_HD480_852x480 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_HD720_1280x720 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_HSXGA_5120x4096 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_QCIF_176x144 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_QQVGA_160x120 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_QSXGA_2560x2048 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_QVGA_320x240 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_QXGA_2048x1536 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_SQCIF_128x96 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_SVGA_800x600 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_SXGA_1280x1024 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_UXGA_1600x1200 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_VGA_640x480 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_WHSXGA_6400x4096 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_WHUXGA_7680x4800 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_WOXGA_2560x1600 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_WQSXGA_3200x2048 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_WQUXGA_3840x2400 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_WSXGA_1600x1024 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_WUXGA_1920x1200 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_WVGA_852x480 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_WXGA_1366x768 , 
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_XGA_1024x768 
} UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_FrameSizeEnumType_FrameSizeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType
{
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_UNKNOWN , 
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_BEIDOU , 
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_GALILEO , 
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_GLONASS , 
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_GPS , 
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_IRNSS , 
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_QZSS , 
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_SBAS 
} UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumTypeSeq, UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType_copy(
    UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_GPSConstellationEnumType_GPSConstellationEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType
{
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_INITIATING , 
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_PERFORMING , 
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_STABLE 
} UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumTypeSeq, UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType_copy(
    UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_GPSFixEnumType_GPSFixEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType
{
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_GPS_1 , 
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_GPS_2 , 
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_GPS_2D , 
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_GPS_3 , 
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_GPS_3D , 
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_GPS_4 , 
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_GPS_DEAD_RECK , 
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_NO_NAV 
} UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumTypeSeq, UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType_copy(
    UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_GPSNavigationSolutionEnumType_GPSNavigationSolutionEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType
{
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_DISABLED , 
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_ENABLED , 
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_ACTIVE_AVOID_OBSTACLE , 
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_PITCHOVER_LIMIT , 
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_ROLLOVER_LIMIT , 
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_ACTIVE_STOP_ON_OBSTACLE 
} UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumTypeSeq, UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType_copy(
    UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_GuardedTeleoperationStatusEnumType_GuardedTeleoperationStatusEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType
{
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_BASELINE , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_CAVLC444 , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_CONSTRAINED_BASELINE , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_CONSTRAINED_HIGH , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_EXTENDED , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_HIGH , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_HIGH10 , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_HIGH10_INTRA , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_HIGH422 , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_HIGH422_INTRA , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_HIGH444_INTRA , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_HIGH444_PREDICTIVE , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_MAIN , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_MULTIVIEW_HIGH , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_PROGRESSIVE_HIGH , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_SCALABLE_BASELINE , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_SCALABLE_CONSTRAINED_BASELINE , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_SCALABLE_CONSTRAINED_HIGH , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_SCALABLE_HIGH , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_SCALABLE_HIGH_INTRA , 
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_STEREO_HIGH 
} UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumTypeSeq, UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType_copy(
    UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_H264EncodingEnumType_H264EncodingEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType
{
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_BEST_QUALITY , 
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_DRIVE_VISION , 
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_LOW_LATENCY , 
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_MANIPULATION , 
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_PERSISTENT_STARE , 
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_PROGRAM_SPECIFIC_1 , 
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_PROGRAM_SPECIFIC_2 , 
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_PROGRAM_SPECIFIC_3 , 
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_PROGRAM_SPECIFIC_4 , 
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_SLOW_COMMS 
} UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumTypeSeq, UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType_copy(
    UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_H264PresetEnumType_H264PresetEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType
{
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_DEFERRED , 
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_DENIED , 
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_GRANTED , 
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_TIMEOUT , 
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_INSUFFICIENT_AUTHORITY , 
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_NOT_AVAILABLE 
} UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumTypeSeq, UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType_copy(
    UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_HandoverResultEnumType_HandoverResultEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType
{
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_MAGNETIC_NORTH , 
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_TRUE_NORTH , 
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_WIND_DIRECTION 
} UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumTypeSeq, UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType_copy(
    UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_HeadingReferenceEnumType_HeadingReferenceEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType
{
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_ALTITUDE , 
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_DEPTH 
} UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_HeightModeEnumType_HeightModeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType
{
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_LAT_LON_PRIORITY , 
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_Z_PRIORITY 
} UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumTypeSeq, UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType_copy(
    UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_HoverKindEnumType_HoverKindEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType
{
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_OFF , 
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_RUN , 
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_START 
} UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_IgnitionStateEnumType_IgnitionStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType
{
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_BMP , 
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_CR2_RAW , 
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_DNG , 
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_GIF , 
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_JPEG , 
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_NEF , 
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_PGM , 
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_PNG , 
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_PNM , 
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_PPM , 
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_TIFF 
} UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumTypeSeq, UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType_copy(
    UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_ImageFormatEnumType_ImageFormatEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType
{
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_COLOR , 
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_GREYSCALE , 
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_INFRARED , 
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_LOWLIGHT 
} UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_ImagingModeEnumType_ImagingModeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType
{
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_COURSE_GPS_ALIGNMENT , 
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_COURSE_STATIONARY_ALIGNMENT , 
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_FINE_GPS_ALIGNMENT_COMPLETE , 
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_FINE_GPS_ALIGNMENT_STARTED , 
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_FINE_STATIONARY_ALIGNMENT_COMPLETE , 
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_FINE_STATIONARY_ALIGNMENT_STARTED , 
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_INERTIAL_SENSOR_FAILURE , 
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_INIT , 
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_OPERATIONAL 
} UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumTypeSeq, UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType_copy(
    UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_InertialSensorOpStatusEnumType_InertialSensorOpStatusEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType
{
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_OFF , 
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_ON , 
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_RESTARTING 
} UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_InertialSensorStateEnumType_InertialSensorStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType
{
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_AUTO_DEFAULT , 
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_ISO_100 , 
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_ISO_1600 , 
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_ISO_200 , 
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_ISO_3200 , 
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_ISO_400 , 
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_ISO_800 
} UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumTypeSeq, UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType_copy(
    UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_LightSensitivityEnumType_LightSensitivityEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType
{
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_ACTIVE , 
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_DISABLED , 
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_ENABLED 
} UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumTypeSeq, UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType_copy(
    UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_LostCommsStatusEnumType_LostCommsStatusEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType
{
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_LOWER , 
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_RAISE , 
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_STOP 
} UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumTypeSeq, UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType_copy(
    UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_MastActionEnumType_MastActionEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType
{
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_DOWN , 
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_MOVING_DOWN , 
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_MOVING_UP , 
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_UP 
} UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_MastStateEnumType_MastStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType
{
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_FAILED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_COMPLETED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_ISSUED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_COMMANDED , 
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_EXECUTING , 
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_CANCELED 
} UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumTypeSeq, UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType_copy(
    UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_CommandStatusEnumType_CommandStatusEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType
{
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_AVI , 
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_H_261 , 
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_H_262 , 
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_H_263 , 
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_H_263PLUS , 
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_H_264 , 
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_MJPEG , 
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_MPEG_1 , 
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_MPEG_2 , 
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_MPEG_4 , 
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_NONE 
} UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumTypeSeq, UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType_copy(
    UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_DataEncodingEnumType_DataEncodingEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType
{
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_CONTACT , 
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_OTHER 
} UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumTypeSeq, UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType_copy(
    UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_FeatureKindEnumType_FeatureKindEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType
{
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_CIRCLE , 
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_RACETRACK 
} UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumTypeSeq, UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType_copy(
    UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_LoiterKindEnumType_LoiterKindEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType
{
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_PLANNED_PENDING_APPROVAL , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_AWAITING_EXECUTION_APPROVAL , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_ALLOCATED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_EXECUTION_APPROVED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_CANCELED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_COMPLETED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_DROPPED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_PLANNED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_PROPOSED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_QUEUED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_EXECUTING , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_FAILED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_UNALLOCATED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_ALLOCATED_PENDING_APPROVAL , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_AWAITING_MISSION_PLAN , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_PAUSED , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_QUEUING , 
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_PLANNING 
} UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_TaskStateEnumType_TaskStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType
{
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_MPEG_2 , 
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_MP4 , 
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_OTHER 
} UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumTypeSeq, UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType_copy(
    UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_TransportEncodingEnumType_TransportEncodingEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType
{
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_APPROACH_FINAL_POINT , 
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_APPROACH_INITIAL_POINT , 
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_LAUNCH , 
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_LOITER , 
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_NAV_ONLY , 
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_NAV_TARGET , 
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_OTHER , 
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_RECOVERY , 
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_RENDEZVOUS 
} UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumTypeSeq, UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType_copy(
    UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_WaypointKindEnumType_WaypointKindEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType
{
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_AUTO_DEFAULT , 
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_CENTER_WEIGHTED , 
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_SPOT 
} UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_MeteringModeEnumType_MeteringModeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType
{
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType__FIXED , 
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_FIXED_BOW_THRUSTER , 
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_FIXED_PORT_PROPULSOR , 
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_FIXED_STERN_THRUSTER , 
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_VARIABLE_BEARING , 
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_VARIABLE_PITCH , 
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_VARIABLE_PITCH_AND_BEARING 
} UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_MountModeEnumType_MountModeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType
{
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_ESTIMATED , 
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_GROUND_TRUTH , 
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_MEASURED 
} UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumTypeSeq, UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType_copy(
    UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_NavigationSolutionEnumType_NavigationSolutionEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType
{
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_DEVIATE_FROM_PATH , 
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_DO_NOTHING , 
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_STOP_ON_PATH 
} UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumTypeSeq, UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType_copy(
    UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_ObstacleAvoidanceEnumType_ObstacleAvoidanceEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType
{
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_HISTORIAL_GLOBAL , 
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_HISTORICAL_LOCAL , 
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_PLANNED_GLOBAL , 
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_PLANNED_LOCAL 
} UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumTypeSeq, UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType_copy(
    UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_PathWayEnumType_PathWayEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType
{
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_MAINTENANCE , 
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_STANDARD_OPERATING , 
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_TRAINING 
} UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_PlatformModeEnumType_PlatformModeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType
{
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_ACTIVE , 
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_EXITING , 
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_INITIALIZING 
} UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumTypeSeq, UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType_copy(
    UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_PlatformModeTransitionEnumType_PlatformModeTransitionEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType
{
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_FAULT , 
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_OFF , 
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_ON 
} UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_PowerPlantStateEnumType_PowerPlantStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType
{
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_FAULT , 
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_OFF , 
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_ON_FORWARD , 
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_ON_REVERSE 
} UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_PumpStateEnumType_PumpStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType
{
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_INVALID_HORIZONTAL_FOV , 
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_INVALID_SENSOR_RANGE , 
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_INVALID_SENSOR_STATE , 
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_INVALID_UPDATE_RATE , 
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_INVALID_VERTICAL_FOV , 
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_MULTIPLE_INVALID_PARAMETERS , 
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_UNKNOWN_ERROR_FAULT , 
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_UNKNOWN_SENSOR_ID 
} UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_RangeErrorCodeEnumType_RangeErrorCodeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType
{
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_NORMAL , 
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_RENDERED_USELESS , 
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_RENDERED_USELESS_FAILED 
} UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_RenderUselessStateEnumType_RenderUselessStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType
{
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_ACTUAL , 
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_GROUND_TRUTH , 
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_SIMULATED , 
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_TENTATIVE 
} UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumTypeSeq, UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType_copy(
    UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_SourceIndicatorEnumType_SourceIndicatorEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType
{
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_INVALID_FORMAT , 
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_INVALID_FRAME_SIZE , 
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_MULTIPLE_INVALID_PARAMETERS , 
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_UNKNOWN_ERROR_FAULT , 
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_UNKNOWN_SENSOR_ID 
} UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_StillImageErrorCodeEnumType_StillImageErrorCodeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType
{
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_PAUSE , 
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_PLAY , 
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_STOP 
} UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_StreamStateEnumType_StreamStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType
{
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_ALWAYS_ENABLED_OR_CLEAR , 
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_DISABLED , 
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_ENABLED 
} UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumTypeSeq, UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType_copy(
    UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_TamperDetectionStateEnumType_TamperDetectionStateEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType
{
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_LRC , 
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_MEC , 
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_MRC , 
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_SLOW , 
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_VEHICLE_SPECIFIC 
} UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_VehicleSpeedModeEnumType_VehicleSpeedModeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType
{
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_SPEED_THROUGH_AIR , 
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_OTHER , 
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_RPM , 
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_SPEED_OVER_GROUND , 
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_SPEED_THROUGH_WATER 
} UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumTypeSeq, UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType_copy(
    UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_VehicleSpeedReferenceEnumType_VehicleSpeedReferenceEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType
{
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_CURRENT_COMMAND_SOG , 
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_CURRENT_COMMAND_SRM , 
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_DEFAULT_COMMAND_SOG , 
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_DEFAULT_COMMAND_SRM , 
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_MAX_ALLOWED_SOG , 
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_MAX_ALLOWED_SRM , 
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_MIN_ALLOWED_SOG , 
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_MIN_ALLOWED_SRM 
} UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_VelocityCommandTypeEnumType_VelocityCommandTypeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType
{
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_NTSCJ , 
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_NTSCM , 
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_PALM , 
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_PALN , 
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_SECAMBG , 
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_SECAML 
} UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumTypeSeq, UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType_copy(
    UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_VideoFormatEnumType_VideoFormatEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType
{
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_AID_TO_NAVIGATION_CHANNEL_MARKER , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_MEDIUM_VESSEL_FISHING , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_AID_TO_NAVIGATION_GENERAL , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_SMALL_VESSEL_JET_SKI , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_AID_TO_NAVIGATION_LARGE_BUOY , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_LARGE_VESSEL_CARGO , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_LARGE_GENERAL_OBSTACLE , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_LARGE_VESSEL_GENERAL , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_LARGE_VESSEL_MILITARY , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_LARGE_VESSEL_PASSENGER , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_LARGE_VESSEL_OTHER , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_AID_TO_NAVIGATION_LIGHTHOUSE , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_MEDIUM_VESSEL_GENERAL , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_MEDIUM_VESSEL_MILITARY , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_MEDIUM_VESSEL_OTHER , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_SMALL_VESSEL_POWER_BOAT , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_SAILBOAT , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_AID_TO_NAVIGATION_SMALL_BUOY , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_SMALL_GENERAL_OBSTACLE , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_SMALL_VESSEL_GENERAL , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_SMALL_VESSEL_MILITARY , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_SMALL_VESSEL_OTHER , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_MEDIUM_VESSEL_TUG , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_MEDIUM_VESSEL_TUG_IN_TOW , 
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_MEDIUM_VESSEL_YACHT 
} UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumTypeSeq, UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType_copy(
    UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_VisualClassificationEnumType_VisualClassificationEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType
{
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_NO_VALID_TURN_DIRECTION , 
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_LEFT_TURN , 
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_RIGHT_TURN , 
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_VEHICLE_SPECIFIC , 
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_INTO_THE_CURRENT , 
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_INTO_THE_WIND 
} UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumTypeSeq, UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType_copy(
    UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_WaterTurnDirectionEnumType_WaterTurnDirectionEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType
{
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_AUTO_DEFAULT , 
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_CLOUDY , 
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_DAYLIGHT , 
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_FLASH , 
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_FLUORESCENT , 
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_SHADE , 
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_TUNGSTEN 
} UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumTypeSeq, UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType_copy(
    UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_WhiteBalanceEnumType_WhiteBalanceEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType
{
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_KEEP_IN , 
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_KEEP_OUT 
} UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumTypeSeq, UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType_copy(
    UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_ZoneKindEnumType_ZoneKindEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

typedef enum UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType
{
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_ANALOG_ONLY , 
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_DIGITAL_ONLY , 
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_OFF , 
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_MIXED_DEFAULT 
} UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType;
#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, start exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport __declspec(dllexport)
#endif

#ifndef NDDS_STANDALONE_TYPE
NDDSUSERDllExport DDS_TypeCode * UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_get_typecode(void); /* Type code */
NDDSUSERDllExport RTIXCdrTypePlugin *UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_get_type_plugin_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_get_sample_access_info(void);
NDDSUSERDllExport RTIXCdrSampleAccessInfo *UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_get_sample_seq_access_info(void);
#endif
DDS_SEQUENCE(UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumTypeSeq, UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_initialize(
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType* self);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_initialize_ex(
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType* self,RTIBool allocatePointers,RTIBool allocateMemory);

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_initialize_w_params(
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType* self,
    const struct DDS_TypeAllocationParams_t * allocParams);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_finalize_w_return(
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_finalize(
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType* self);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_finalize_ex(
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType* self,RTIBool deletePointers);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_finalize_w_params(
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType* self,
    const struct DDS_TypeDeallocationParams_t * deallocParams);

NDDSUSERDllExport
void UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_finalize_optional_members(
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType* self, RTIBool deletePointers);  

NDDSUSERDllExport
RTIBool UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType_copy(
    UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType* dst,
    const UMAA_Common_MaritimeEnumeration_ZoomModeEnumType_ZoomModeEnumType* src);

#if (defined(RTI_WIN32) || defined (RTI_WINCE) || defined(RTI_INTIME)) && defined(NDDS_USER_DLL_EXPORT)
/* If the code is building on Windows, stop exporting symbols.
*/
#undef NDDSUSERDllExport
#define NDDSUSERDllExport
#endif

#ifndef NDDS_STANDALONE_TYPE
namespace rti { 
    namespace xcdr {
    } 
}

#endif

#endif /* EnumerationSets */

