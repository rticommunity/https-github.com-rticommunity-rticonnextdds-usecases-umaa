<?xml version="1.0"?>
<!-- 
(c) Copyright, Real-Time Innovations, 2020.  All rights reserved.
RTI grants Licensee a license to use, modify, compile, and create derivative
works of the software solely for use with RTI Connext DDS. Licensee may
redistribute copies of the software provided that all such copies are subject
to this license. The software is provided "as is", with no warranty of any
type, including any warranty for fitness for any purpose. RTI is under no
obligation to maintain or support the software. RTI shall not be liable for
any incidental or consequential damages arising out of the use or inability
to use the software.
-->

<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/7.1.0/rti_routing_service.xsd">

    <types>
        <include file="umaa_sa_types.xml" />
    </types>

    <routing_service name="bridge_vehicle_umaa_sa">
        <annotation>
            <documentation>
                Routes all UMAA::SA topics from domain 0 to domain 1
                and the other way around using RELIABLE QoS.

                This can be used to segment your internal vehicle databus from
                the UMAA C2 environment.

                This assists in scenarios where you might want to apply separate 
                QOS policies(Security/Transport etc) for internal traffic vs external.

                By including the type files and registering them, this xml file is 
                setup for the scenario where type objects have been disabled from discovery.

            </documentation>
        </annotation>

        <!-- The administration tag enables remote administration, and is
            required when using Admin Console. -->
        <administration>
            <domain_id>0</domain_id>
            <distributed_logger>
                <enabled>true</enabled>
                <filter_level>WARNING</filter_level>
            </distributed_logger>
        </administration>

        <!-- This is the Monitoring configuration for all the entities in
            this routing service, and is required when using Admin Console. -->
        <monitoring>
            <!-- The domain id where to publish the monitoring information -->
            <domain_id>0</domain_id>
            <!-- How often to publish it -->
            <status_publication_period>
                <sec>5</sec>
                <nanosec>0</nanosec>
            </status_publication_period>
            <!-- How often to compute statistics -->
            <statistics_sampling_period>
                <sec>1</sec>
                <nanosec>0</nanosec>
            </statistics_sampling_period>
        </monitoring>

        <domain_route name="TwoWayDomainRoute">

            <participant name="Vehicle">

                <!-- Register the types -->
                <register_type name="AccelerationReportType"
                    type_ref="UMAA::SA::AccelerationStatus::AccelerationReportType" />

                <register_type name="CompartmentConfigReportType"
                    type_ref="UMAA::SA::CompartmentConfig::CompartmentConfigReportType" />

                <register_type name="CompartmentReportType"
                    type_ref="UMAA::SA::CompartmentStatus::CompartmentReportType" />

                <register_type name="ContactCOLREGSClassificationStatusReportType"
                    type_ref="UMAA::SA::ContactCOLREGSClassificationStatus::ContactCOLREGSClassificationStatusReportType" />

                <register_type name="ContactRemovedReportType"
                    type_ref="UMAA::SA::ContactStatus::ContactRemovedReportType" />

                <register_type name="ContactReportType"
                    type_ref="UMAA::SA::ContactStatus::ContactReportType" />

                <register_type name="ContactReportType_ContactsSet"
                    type_ref="UMAA::SA::ContactStatus::ContactReportType_ContactsSet" />

                <register_type name="ContactVisualClassificationStatusReportType"
                    type_ref="UMAA::SA::ContactVisualClassificationStatus::ContactVisualClassificationStatusReportType" />

                <register_type name="CTDReportType"
                    type_ref="UMAA::SA::CTDStatus::CTDReportType" />

                <register_type name="DateTimeReportType"
                    type_ref="UMAA::SA::DateTimeStatus::DateTimeReportType" />

                <register_type name="ECEFPoseReportType"
                    type_ref="UMAA::SA::ECEFPoseStatus::ECEFPoseReportType" />

                <register_type name="FeatureImageRemovedReportType"
                    type_ref="UMAA::SA::FeatureImageStatus::FeatureImageRemovedReportType" />

                <register_type name="FeatureImageReportType"
                    type_ref="UMAA::SA::FeatureImageStatus::FeatureImageReportType" />

                <register_type name="GlobalDeadReckoningCommandReportType"
                    type_ref="UMAA::SA::GlobalDeadReckoning::GlobalDeadReckoningCommandReportType" />

                <register_type name="GlobalDeadReckoningCommandStatusType"
                    type_ref="UMAA::SA::GlobalDeadReckoning::GlobalDeadReckoningCommandStatusType" />

                <register_type name="GlobalDeadReckoningCommandType"
                    type_ref="UMAA::SA::GlobalDeadReckoning::GlobalDeadReckoningCommandType" />

                <register_type name="GlobalPoseConfigReportType"
                    type_ref="UMAA::SA::GlobalPoseConfig::GlobalPoseConfigReportType" />

                <register_type name="GlobalPoseReportType"
                    type_ref="UMAA::SA::GlobalPoseStatus::GlobalPoseReportType" />

                <register_type name="ImageRemovedReportType"
                    type_ref="UMAA::SA::FeatureImageStatus::FeatureImageRemovedReportType" />

                <register_type name="ImageReportType"
                    type_ref="UMAA::SA::ImageStatus::ImageReportType" />

                <register_type name="LocalDeadReckoningCommandReportType"
                    type_ref="UMAA::SA::LocalDeadReckoning::LocalDeadReckoningCommandReportType" />

                <register_type name="LocalDeadReckoningCommandStatusType"
                    type_ref="UMAA::SA::LocalDeadReckoning::LocalDeadReckoningCommandStatusType" />

                <register_type name="LocalDeadReckoningCommandType"
                    type_ref="UMAA::SA::LocalDeadReckoning::LocalDeadReckoningCommandType" />

                <register_type name="LocalPoseReportType"
                    type_ref="UMAA::SA::LocalPoseStatus::LocalPoseReportType" />

                <register_type name="NEDVelocityReportType"
                    type_ref="UMAA::SA::NEDVelocityStatus::NEDVelocityReportType" />

                <register_type name="PathReporterSpecsReportType"
                    type_ref="UMAA::SA::PathReporterSpecs::PathReporterSpecsReportType" />

                <register_type name="PathReporterReportType"
                    type_ref="UMAA::SA::PathReporterStatus::PathReporterReportType" />

                <register_type name="RangeConfigReportType"
                    type_ref="UMAA::SA::RangeConfig::RangeConfigReportType" />

                <register_type name="RangeSpecsReportType"
                    type_ref="UMAA::SA::RangeSpecs::RangeSpecsReportType" />

                <register_type name="RangeReportType"
                    type_ref="UMAA::SA::RangeStatus::RangeReportType" />

                <register_type name="SeaStatusReportType"
                    type_ref="UMAA::SA::SeaStatus::SeaStatusReportType" />

                <register_type name="SpeedReportType"
                    type_ref="UMAA::SA::SpeedStatus::SpeedReportType" />

                <register_type name="StillImageConfigReportType"
                    type_ref="UMAA::SA::StillImageConfig::StillImageConfigReportType" />

                <register_type name="StillImageSpecsReportType"
                    type_ref="UMAA::SA::StillImageSpecs::StillImageSpecsReportType" />

                <register_type name="StillImageReportType"
                    type_ref="UMAA::SA::StillImageStatus::StillImageReportType" />

                <register_type name="TranslationalShipMotionReportType"
                    type_ref="UMAA::SA::TranslationalShipMotionStatus::TranslationalShipMotionReportType" />

                <register_type name="VehicleNavigationModeReportType"
                    type_ref="UMAA::SA::VehicleNavigationModeStatus::VehicleNavigationModeReportType" />

                <register_type name="VelocityReportType"
                    type_ref="UMAA::SA::VelocityStatus::VelocityReportType" />

                <register_type name="WaterCurrentStatusReportType"
                    type_ref="UMAA::SA::WaterCurrentStatus::WaterCurrentStatusReportType" />

                <register_type name="WaterspaceReportType"
                    type_ref="UMAA::SA::WaterspaceStatus::WaterspaceReportType" />

                <register_type name="WeatherStatusReportType"
                    type_ref="UMAA::SA::WeatherStatus::WeatherStatusReportType" />

                <register_type name="WindStatusReportType"
                    type_ref="UMAA::SA::WindStatus::WindStatusReportType" />


                <domain_id>0</domain_id>
            </participant>

            <participant name="UMAA_C2">
                <domain_id>1</domain_id>
            </participant>

            <session name="Session1">
                <auto_topic_route name="AllForward">
                    <publish_with_original_info>true</publish_with_original_info>
                    <input participant="Vehicle">
                        <allow_topic_name_filter>UMAA::SA*</allow_topic_name_filter>
                        <allow_registered_type_name_filter>*</allow_registered_type_name_filter>
                        <deny_topic_name_filter>rti/*</deny_topic_name_filter>
                        <creation_mode>IMMEDIATE</creation_mode>
                    </input>
                    <output participant="UMAA_C2">
                        <allow_topic_name_filter>*</allow_topic_name_filter>
                        <allow_registered_type_name_filter>*</allow_registered_type_name_filter>
                        <deny_topic_name_filter>rti/*</deny_topic_name_filter>
                        <creation_mode>IMMEDIATE</creation_mode>
                    </output>
                </auto_topic_route>
            </session>

            <session name="Session2">
                <auto_topic_route name="AllBackward">
                    <publish_with_original_info>true</publish_with_original_info>
                    <input participant="UMAA_C2">
                        <allow_topic_name_filter>UMAA::SA*</allow_topic_name_filter>
                        <allow_registered_type_name_filter>*</allow_registered_type_name_filter>
                        <deny_topic_name_filter>rti/*</deny_topic_name_filter>
                        <creation_mode>ON_DOMAIN_AND_ROUTE_MATCH</creation_mode>
                        <datareader_qos>
                            <reliability>
                                <kind>RELIABLE_RELIABILITY_QOS</kind>
                            </reliability>
                        </datareader_qos>
                    </input>
                    <output participant="Vehicle">
                        <allow_topic_name_filter>*</allow_topic_name_filter>
                        <allow_registered_type_name_filter>*</allow_registered_type_name_filter>
                        <deny_topic_name_filter>rti/*</deny_topic_name_filter>
                        <creation_mode>ON_DOMAIN_AND_ROUTE_MATCH</creation_mode>
                        <datawriter_qos>
                            <reliability>
                                <kind>RELIABLE_RELIABILITY_QOS</kind>
                            </reliability>
                        </datawriter_qos>
                    </output>
                </auto_topic_route>
            </session>

        </domain_route>
    </routing_service>
</dds>