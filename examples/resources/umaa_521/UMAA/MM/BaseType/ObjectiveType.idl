/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. 
 * Distribution is unlimited.
 * This software was developed by the Department of the Navy,
 * NAVSEA Unmanned and Small Combatants. It is provided under the terms of
 * use found in the LICENSE file at the source code root directory.
 *
 */

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

/**
  *
  * Version: 5.2.1
  * MDE Version: 5.0.1
  *
  */

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_OBJECTIVETYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_OBJECTIVETYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/PrimitiveConstrained/ConstrainedTypes.idl"
#include "UMAA/Common/Requirements/DateTimeRequirement.idl"
#include "UMAA/MM/BaseType/ContingencyObjectiveType.idl"
#include "UMAA/MM/BaseType/DeploymentObjectiveType.idl"
#include "UMAA/MM/BaseType/DriftObjectiveType.idl"
#include "UMAA/MM/BaseType/ExpObjectiveType.idl"
#include "UMAA/MM/BaseType/Figure8ObjectiveType.idl"
#include "UMAA/MM/BaseType/HoverObjectiveType.idl"
#include "UMAA/MM/BaseType/RacetrackObjectiveType.idl"
#include "UMAA/MM/BaseType/RecoveryObjectiveType.idl"
#include "UMAA/MM/BaseType/RegularPolygonObjectiveType.idl"
#include "UMAA/MM/BaseType/RouteObjectiveType.idl"
#include "UMAA/MM/BaseType/StationkeepObjectiveType.idl"
module UMAA
{
  module MM
  {
    module BaseType
    {
        enum ObjectiveTypeEnum
        {
            REGULARPOLYGONOBJECTIVE_D,
            RECOVERYOBJECTIVE_D,
            DEPLOYMENTOBJECTIVE_D,
            STATIONKEEPOBJECTIVE_D,
            ROUTEOBJECTIVE_D,
            EXPOBJECTIVE_D,
            DRIFTOBJECTIVE_D,
            FIGURE8OBJECTIVE_D,
            HOVEROBJECTIVE_D,
            RACETRACKOBJECTIVE_D,
            CONTINGENCYOBJECTIVE_D
        };

        union ObjectiveTypeUnion switch (ObjectiveTypeEnum)
        {
              case REGULARPOLYGONOBJECTIVE_D:
                UMAA::MM::BaseType::RegularPolygonObjectiveType RegularPolygonObjectiveVariant;
              case RECOVERYOBJECTIVE_D:
                UMAA::MM::BaseType::RecoveryObjectiveType RecoveryObjectiveVariant;
              case DEPLOYMENTOBJECTIVE_D:
                UMAA::MM::BaseType::DeploymentObjectiveType DeploymentObjectiveVariant;
              case STATIONKEEPOBJECTIVE_D:
                UMAA::MM::BaseType::StationkeepObjectiveType StationkeepObjectiveVariant;
              case ROUTEOBJECTIVE_D:
                UMAA::MM::BaseType::RouteObjectiveType RouteObjectiveVariant;
              case EXPOBJECTIVE_D:
                UMAA::MM::BaseType::ExpObjectiveType ExpObjectiveVariant;
              case DRIFTOBJECTIVE_D:
                UMAA::MM::BaseType::DriftObjectiveType DriftObjectiveVariant;
              case FIGURE8OBJECTIVE_D:
                UMAA::MM::BaseType::Figure8ObjectiveType Figure8ObjectiveVariant;
              case HOVEROBJECTIVE_D:
                UMAA::MM::BaseType::HoverObjectiveType HoverObjectiveVariant;
              case RACETRACKOBJECTIVE_D:
                UMAA::MM::BaseType::RacetrackObjectiveType RacetrackObjectiveVariant;
              case CONTINGENCYOBJECTIVE_D:
                UMAA::MM::BaseType::ContingencyObjectiveType ContingencyObjectiveVariant;
        };

      struct ObjectiveType
      {
      // An indication whether approval is required for the specified objective within a mission.
      boolean approvalRequired;

      // If the objective is decomposed into lower level objectives, specifies one or more unique identifiers of the children objectives that decompose the objective.
      sequence<UMAA::Common::Measurement::NumericGUID,256> childObjectiveIDs;

      // A short name for the objective.
      UMAA::Common::PrimitiveConstrained::StringShortDescription name;

      // A description of the objective.
      UMAA::Common::PrimitiveConstrained::StringShortDescription objectiveDescription;

      // If the objective was decomposed from a high level objective, specifies the unique identifier of the parent objective from which it was decomposed.
      @optional UMAA::Common::Measurement::NumericGUID parentObjectiveID;

      // Specifies the execution priority for the objective.
      UMAA::Common::Measurement::Priority priority;

      // Defines a unique identifier for the optional trigger used to initiate the execution of the specified objective.
      @optional UMAA::Common::Measurement::NumericGUID triggerID;

      // Union to capture specializations of ObjectiveType
      ObjectiveTypeUnion ObjectiveTypeSubtypes;

      // Unique identifier for the objective within a mission.
      @key UMAA::Common::Measurement::NumericGUID objectiveID;
      };


    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_OBJECTIVETYPE
