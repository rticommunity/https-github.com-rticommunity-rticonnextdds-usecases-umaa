/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. 
 * Distribution is unlimited.
 * This software was developed by the Department of the Navy,
 * NAVSEA Unmanned and Small Combatants. It is provided under the terms of
 * use found in the LICENSE file at the source code root directory.
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

/**
  *
  * Version 6.0
  * Date: 2024-06-06
  *
  */


#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_CONDITIONAL_CONDITIONALREPORT_CONDITIONALREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_CONDITIONAL_CONDITIONALREPORT_CONDITIONALREPORTTYPE

#include "UMAA/Common/LargeSetMetadata.idl"
#include "UMAA/Common/IdentifierType.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/MM/Conditional/ConditionalType.idl"
module UMAA
{
  module MM
  {
    module ConditionalReport
    {
    
      const string ConditionalReportTypeTopic = "UMAA::MM::ConditionalReport::ConditionalReportType";
  
      /**
        * This structure is used to retrieve the current set of conditionals.
        */
    
      struct ConditionalReportType
      {
      // The origination time of the data being conveyed in the message, or as close to the data or command generation time as is reasonably possible.
      UMAA::Common::Measurement::DateTime timeStamp;

      // The unique identifier of the originating source of the command interface.
      @key UMAA::Common::IdentifierType source;
      UMAA::Common::LargeSetMetadata conditionalsSetMetadata;
      };

      const string ConditionalReportTypeConditionalsSetElementTopic = "UMAA::MM::ConditionalReport::ConditionalReportTypeConditionalsSetElement";
      // Defines the large set element type that wraps UMAA::MM::Conditional::ConditionalType
      struct ConditionalReportTypeConditionalsSetElement
      {
        // The value of the set element.
        UMAA::MM::Conditional::ConditionalType element;
        // NOTE: Ties this element back to the set metadata with the same setID, which is the collection of all elements in the topic with the same sourceId.
        @key UMAA::Common::Measurement::NumericGUID setID;
        // NOTE: Uniquely identifies this element within the set and universally across any large collection that currently exists on the DDS bus.
        @key UMAA::Common::Measurement::NumericGUID elementID;
        // The timestamp of this element.
        UMAA::Common::Measurement::DateTime elementTimestamp;
      };
  
    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_CONDITIONAL_CONDITIONALREPORT_CONDITIONALREPORTTYPE

