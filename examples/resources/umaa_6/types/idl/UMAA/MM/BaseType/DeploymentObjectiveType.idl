/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. 
 * Distribution is unlimited.
 * This software was developed by the Department of the Navy,
 * NAVSEA Unmanned and Small Combatants. It is provided under the terms of
 * use found in the LICENSE file at the source code root directory.
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

/**
  *
  * Version 6.0
  * Date: 2024-06-06
  *
  */


#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_DEPLOYMENTOBJECTIVETYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_DEPLOYMENTOBJECTIVETYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/IdentifierType.idl"
#include "UMAA/Common/Measurement/ElevationVariantType.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/Orientation/DirectionRequirementVariantType.idl"
#include "UMAA/Common/Position/GeoPosition2DRequirement.idl"
#include "UMAA/Common/PrimitiveConstrained/ConstrainedTypes.idl"
#include "UMAA/Common/Speed/SpeedRequirementVariantType.idl"
#include "UMAA/Common/Time/DateTimeRequirementType.idl"
#include "UMAA/MM/BaseType/StateTriggerType.idl"
module UMAA
{
  module MM
  {
    module BaseType
    {

    const string DeploymentObjectiveTypeTopic = "UMAA::MM::BaseType::DeploymentObjectiveType";

      /**
        * This structure is used to specify the attributes required for the vehicle to perform the deployment of an asset.
        *
        * This structure is a specialization of UMAA::MM::BaseType::ObjectiveType.
        */
    
      struct DeploymentObjectiveType
      {
      // Specifies the elevation for deploying the asset.
      UMAA::Common::Measurement::ElevationVariantType elevation;

      // Specifies the heading to be maintained during deployment.
      UMAA::Common::Orientation::DirectionRequirementVariantType heading;

      // Specifies the location for deploying the asset.
      UMAA::Common::Position::GeoPosition2DRequirement position;

      // Specifies the speed to be maintained during deployment.
      UMAA::Common::Speed::SpeedRequirementVariantType speed;

      // This field identifies the timestamp that signals the end of an atomic update to the instance of the specialization. NOTE: Ties this element back to the specializationID in ObjectiveType generalization.
      UMAA::Common::Measurement::DateTime specializationReferenceTimestamp;

      // NOTE: Ties this element back to the ObjectiveType generalization.
      @key UMAA::Common::Measurement::NumericGUID specializationReferenceID;
      };

  
    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_DEPLOYMENTOBJECTIVETYPE

