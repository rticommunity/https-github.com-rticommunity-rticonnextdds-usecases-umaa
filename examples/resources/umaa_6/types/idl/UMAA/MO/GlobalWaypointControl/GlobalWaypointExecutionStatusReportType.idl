/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. 
 * Distribution is unlimited.
 * This software was developed by the Department of the Navy,
 * NAVSEA Unmanned and Small Combatants. It is provided under the terms of
 * use found in the LICENSE file at the source code root directory.
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

/**
  *
  * Version 6.0
  * Date: 2024-06-06
  *
  */


#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_GLOBALWAYPOINTCONTROL_GLOBALWAYPOINTEXECUTIONSTATUSREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_GLOBALWAYPOINTCONTROL_GLOBALWAYPOINTEXECUTIONSTATUSREPORTTYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/IdentifierType.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
module UMAA
{
  module MO
  {
    module GlobalWaypointControl
    {
    
      const string GlobalWaypointExecutionStatusReportTypeTopic = "UMAA::MO::GlobalWaypointControl::GlobalWaypointExecutionStatusReportType";
  
      /**
        * This structure is used to report a series of waypoints based in the global coordinate system and the total number of waypoints of the series of waypoints. All times and distances are provided based on waypoint location not including tolerances.
        */
    
      struct GlobalWaypointExecutionStatusReportType
      {
      // The arrival time of the end of the route.
      UMAA::Common::Measurement::DateTime arrivalTime;

      // When the waypoint is executing, this indicates if the attitude requested is within the commanded tolerance, or system configured tolerance if tolerance is not specified. Optional if attitude is not included in the command.
      @optional boolean attitudeAchieved;

      // Defines the current cross track error. This value must be set if trackTolerance is defined and must not be set if trackTolerance is not defined.
      @optional UMAA::Common::Measurement::Distance crossTrackError;

      // Defines the ground distance travel from the start of the route to this point.
      UMAA::Common::Measurement::Distance cumulativeDistance;

      // Defines the amount of distance remaining from a point to the end of the route.
      UMAA::Common::Measurement::Distance distanceRemaining;

      // Defines the remaining distance to the current waypoint.
      UMAA::Common::Measurement::Distance distanceToWaypoint;

      // When the waypoint is executing, this indicates if the elevation requested is within the commanded tolerance, or system configured tolerance if tolerance is not specified.
      boolean elevationAchieved;

      // When the waypoint is executing, this indicates if the position requested is within the commanded tolerance, or system configured tolerance if tolerance is not specified.
      boolean positionAchieved;

      // When the waypoint is executing, this indicates if the speed requested is within the commanded tolerance, or system configured tolerance if tolerance is not specified.
      boolean speedAchieved;

      // The absolute time at which the waypoint is estimated to be achieved or was actually first achieved.
      UMAA::Common::Measurement::DateTime timeToWaypoint;

      // When the waypoint is executing, this indicates if the track line requested is within the commanded tolerance, or system configured tolerance if tolerance is not specified.
      boolean trackLineAchieved;

      // Defines the current waypoint ID.
      UMAA::Common::Measurement::NumericGUID waypointID;

      // Defines the remaining number of waypoints, which includes the current waypoint.
      UMAA::Common::Measurement::Count waypointsRemaining;

      // The origination time of the data being conveyed in the message, or as close to the data or command generation time as is reasonably possible.
      UMAA::Common::Measurement::DateTime timeStamp;

      // The unique identifier of the originating source of the command interface.
      @key UMAA::Common::IdentifierType source;

      // The unique identifier for the session.
      @key UMAA::Common::Measurement::NumericGUID sessionID;
      };

  
    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLECONTROL_GLOBALWAYPOINTCONTROL_GLOBALWAYPOINTEXECUTIONSTATUSREPORTTYPE

