/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. 
 * Distribution is unlimited.
 * This software was developed by the Department of the Navy,
 * NAVSEA Unmanned and Small Combatants. It is provided under the terms of
 * use found in the LICENSE file at the source code root directory.
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

/**
  *
  * Version 6.0
  * Date: 2024-06-06
  *
  */


#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_DRIFTOBJECTIVETYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_DRIFTOBJECTIVETYPE

#include "UMAA/Common/Distance/DistanceRequirementType.idl"
#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/IdentifierType.idl"
#include "UMAA/Common/Measurement/ElevationRequirementVariantType.idl"
#include "UMAA/Common/Measurement/ElevationVariantType.idl"
#include "UMAA/Common/Measurement/GeoPosition2D.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/PrimitiveConstrained/ConstrainedTypes.idl"
#include "UMAA/Common/Speed/SpeedVariantType.idl"
#include "UMAA/Common/Time/DateTimeRequirementType.idl"
#include "UMAA/MM/BaseType/StateTriggerType.idl"
module UMAA
{
  module MM
  {
    module BaseType
    {

    const string DriftObjectiveTypeTopic = "UMAA::MM::BaseType::DriftObjectiveType";

      /**
        * This structure is used to describe a clearly defined goal specifying the action(s) required for drifting. The drift objective is achieved by having the vehicle, under a reduced power mode, maintain its position within the circle at a defined elevation (or current elevation if not defined) as specified by the reference position and driftRadius. If a position is not specified, then the current vehicle position is used as the reference position for drifting. DriftRadius and elevation include optional tolerances. If specified, the vehicle is allowed to operate within these tolerances without having the objective fail. Otherwise, if any tolerances are violated after the objective is initially achieved, then the objective is considered to have failed. If a tolerance is not specified for any of these attributes, then it is a "best effort" to maintain the specified value for that attribute, and is therefore not considered a cause for the objective to fail. If the duration attribute is not specified, the action(s) should continue indefinitely, or until interrupted by some other action.
        *
        * This structure is a specialization of UMAA::MM::BaseType::ObjectiveType.
        */
    
      struct DriftObjectiveType
      {
      // Defines the drift radius that specifies the maximum distance from the reference position the vehicle is allowed to drift.
      UMAA::Common::Distance::DistanceRequirementType driftRadius;

      // After the transit portion of the objective is complete, defines the duration to execute the drifting portion of the objective. If not specified, duration is not used to determine when drifting is complete.
      @optional UMAA::Common::Measurement::DurationSeconds duration;

      // Defines the vehicle elevation to maintain while drifting. If not specified, the maneuver is performed at the current elevation.
      @optional UMAA::Common::Measurement::ElevationRequirementVariantType elevation;

      // Defines the reference position for drifting. If not specified, the reference position is the current vehicle position.
      @optional UMAA::Common::Measurement::GeoPosition2D position;

      // Defines the desired vehicle speed when maneuvering within the area defined by driftRadius.
      UMAA::Common::Speed::SpeedVariantType speed;

      // Defines the elevation used while transiting to the drift location before transitioning to drifting. If not specified, transit at the current elevation.
      @optional UMAA::Common::Measurement::ElevationVariantType transitElevation;

      // Defines the speed used while transiting to the drift location before transitioning to drifting.
      UMAA::Common::Speed::SpeedVariantType transitSpeed;

      // This field identifies the timestamp that signals the end of an atomic update to the instance of the specialization. NOTE: Ties this element back to the specializationID in ObjectiveType generalization.
      UMAA::Common::Measurement::DateTime specializationReferenceTimestamp;

      // NOTE: Ties this element back to the ObjectiveType generalization.
      @key UMAA::Common::Measurement::NumericGUID specializationReferenceID;
      };

  
    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_BASETYPE_DRIFTOBJECTIVETYPE

