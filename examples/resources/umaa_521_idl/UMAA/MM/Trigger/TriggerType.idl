/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. 
 * Distribution is unlimited.
 * This software was developed by the Department of the Navy,
 * NAVSEA Unmanned and Small Combatants. It is provided under the terms of
 * use found in the LICENSE file at the source code root directory.
 *
 */

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

/**
  *
  * Version: 5.2.1
  * MDE Version: 5.0.1
  *
  */

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_TRIGGER_TRIGGERTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_TRIGGER_TRIGGERTYPE

#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/PrimitiveConstrained/ConstrainedTypes.idl"
#include "UMAA/MM/Trigger/EndTimeTriggerType.idl"
#include "UMAA/MM/Trigger/ExpTriggerType.idl"
#include "UMAA/MM/Trigger/LogicalANDTriggerType.idl"
#include "UMAA/MM/Trigger/LogicalNOTTriggerType.idl"
#include "UMAA/MM/Trigger/LogicalORTriggerType.idl"
#include "UMAA/MM/Trigger/MissionStateTriggerType.idl"
#include "UMAA/MM/Trigger/ObjectiveStateTriggerType.idl"
#include "UMAA/MM/Trigger/StartTimeTriggerType.idl"
#include "UMAA/MM/Trigger/TaskStateTriggerType.idl"
#include "UMAA/MM/Trigger/TimePeriodTriggerType.idl"
#include "UMAA/MM/Trigger/ZoneTriggerType.idl"
module UMAA
{
  module MM
  {
    module Trigger
    {
        enum TriggerTypeEnum
        {
            MISSIONSTATETRIGGER_D,
            TASKSTATETRIGGER_D,
            TIMEPERIODTRIGGER_D,
            EXPTRIGGER_D,
            STARTTIMETRIGGER_D,
            ZONETRIGGER_D,
            LOGICALANDTRIGGER_D,
            ENDTIMETRIGGER_D,
            LOGICALNOTTRIGGER_D,
            LOGICALORTRIGGER_D,
            OBJECTIVESTATETRIGGER_D
        };

        union TriggerTypeUnion switch (TriggerTypeEnum)
        {
              case MISSIONSTATETRIGGER_D:
                UMAA::MM::Trigger::MissionStateTriggerType MissionStateTriggerVariant;
              case TASKSTATETRIGGER_D:
                UMAA::MM::Trigger::TaskStateTriggerType TaskStateTriggerVariant;
              case TIMEPERIODTRIGGER_D:
                UMAA::MM::Trigger::TimePeriodTriggerType TimePeriodTriggerVariant;
              case EXPTRIGGER_D:
                UMAA::MM::Trigger::ExpTriggerType ExpTriggerVariant;
              case STARTTIMETRIGGER_D:
                UMAA::MM::Trigger::StartTimeTriggerType StartTimeTriggerVariant;
              case ZONETRIGGER_D:
                UMAA::MM::Trigger::ZoneTriggerType ZoneTriggerVariant;
              case LOGICALANDTRIGGER_D:
                UMAA::MM::Trigger::LogicalANDTriggerType LogicalANDTriggerVariant;
              case ENDTIMETRIGGER_D:
                UMAA::MM::Trigger::EndTimeTriggerType EndTimeTriggerVariant;
              case LOGICALNOTTRIGGER_D:
                UMAA::MM::Trigger::LogicalNOTTriggerType LogicalNOTTriggerVariant;
              case LOGICALORTRIGGER_D:
                UMAA::MM::Trigger::LogicalORTriggerType LogicalORTriggerVariant;
              case OBJECTIVESTATETRIGGER_D:
                UMAA::MM::Trigger::ObjectiveStateTriggerType ObjectiveStateTriggerVariant;
        };

      struct TriggerType
      {
      // Defines a short name for the trigger.
      UMAA::Common::PrimitiveConstrained::StringShortDescription name;

      // Union to capture specializations of TriggerType
      TriggerTypeUnion TriggerTypeSubtypes;

      // Defines a unique identifier for the trigger.
      @key UMAA::Common::Measurement::NumericGUID triggerID;
      };


    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_MISSION_EXECUTION_MANAGEMENT_TRIGGER_TRIGGERTYPE
