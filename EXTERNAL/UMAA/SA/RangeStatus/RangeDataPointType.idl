/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_SENSOR_MANAGEMENT_RANGESTATUS_RANGEDATAPOINTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_SENSOR_MANAGEMENT_RANGESTATUS_RANGEDATAPOINTTYPE

#include "UMAA/Common/Enumeration/EnumerationSets.idl"
#include "UMAA/Common/Measurement/CovariancePolarType.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
module UMAA
{
  module SA
  {
    module RangeStatus
    {
      struct RangeDataPointType
      {
      // Bearing from sensor in radians

      UMAA::Common::Measurement::Angle bearing;

      // True if bearing is valid; false otherwise

      boolean bearingValidity;

      // Data point error covariance

      UMAA::Common::Measurement::CovariancePolarType dataPointCovariance;

      // Inclination from sensor in radians

      UMAA::Common::Measurement::Angle inclination;

      // True if inclination is valid; false otherwise

      boolean inclinationValidity;

      // Distance from sensor in meters

      UMAA::Common::Measurement::Distance range;

      // True if range is valid; false otherwise

      boolean rangeValidity;

      // Unique ID of this point

      @key UMAA::Common::Measurement::NumericGUID pointID;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_SENSOR_MANAGEMENT_RANGESTATUS_RANGEDATAPOINTTYPE
