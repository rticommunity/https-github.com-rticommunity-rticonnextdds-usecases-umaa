/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
 *
 */  

/**
 *
 * This file was generated by the UxSDK+ tool. Please see
 * https://bitbucket.di2e.net/projects/UXSDK/repos/uxsdk
 * for more information
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

#ifndef _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESTATUS_LOCALDEADRECKONING_LOCALDEADRECKONINGCOMMANDREPORTTYPE
#define _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESTATUS_LOCALDEADRECKONING_LOCALDEADRECKONINGCOMMANDREPORTTYPE

#include "UMAA/Common/Measurement/CovarianceOrientationType.idl"
#include "UMAA/Common/Measurement/CovariancePositionVelocityType.idl"
#include "UMAA/Common/Measurement/ElevationType.idl"
#include "UMAA/Common/Measurement/Measurements.idl"
#include "UMAA/Common/Measurement/Orientation3D_PlatformXYZ.idl"
#include "UMAA/Common/Measurement/Position3D_PlatformXYZ.idl"
module UMAA
{
  module SA
  {
    module LocalDeadReckoning
    {
      const string LocalDeadReckoningCommandReport_TOPIC = "UMAA::SA::LocalDeadReckoning::LocalDeadReckoningCommandReport";
      @topic(name="UMAA::SA::LocalDeadReckoning::LocalDeadReckoningCommandReport")
      struct LocalDeadReckoningCommandReportType
      {
      // The desire orientation (roll, pitch, yaw) of the unmanned platform.

      UMAA::Common::Measurement::Orientation3D_PlatformXYZ attitude;

      // The desired covariance value of the validity of the orientation data.

      UMAA::Common::Measurement::CovarianceOrientationType attitudeCovariance;

      // Specifies the elevation of the vector.

      UMAA::Common::Measurement::ElevationType elevation;

      // The desired position (latitude, longitude) of the unmanned platform

      UMAA::Common::Measurement::Position3D_PlatformXYZ position;

      // The desired covariance value of the validity of the position data.

      UMAA::Common::Measurement::CovariancePositionVelocityType xyPositionCovariance;

      // The desired covariance value of the validity of the position data.

      UMAA::Common::Measurement::CovariancePositionVelocityType zPositionCovariance;

      // The unique identifier for the source.

      @key UMAA::Common::Measurement::NumericGUID source;

      // The time at which the data was derived.

      UMAA::Common::Measurement::DateTime timeStamp;
      };

    };
  };
};

#endif // _LDM_MDE_PRIMARY_MISSION_CONTROL_VEHICLE_MANAGEMENT_VEHICLESTATUS_LOCALDEADRECKONING_LOCALDEADRECKONINGCOMMANDREPORTTYPE
